apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  annotations:
    addon.oam.dev/componentDefinitions: kustomize,helm
    addon.oam.dev/traitDefinitions: kustomize-patch,helm-labels,kustomize-strategy-merge,kustomize-json-patch
  creationTimestamp: null
  labels:
    addons.oam.dev/name: fluxcd
    addons.oam.dev/registry: KubeVela
    addons.oam.dev/version: 2.3.4
  name: addon-fluxcd
  namespace: vela-system
spec:
  components:
  - name: fluxcd-ns
    properties:
      objects:
      - apiVersion: v1
        kind: Namespace
        metadata:
          name: flux-system
    type: k8s-objects
  - name: fluxcd-rbac
    properties:
      objects:
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: cluster-reconciler
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cluster-admin
        subjects:
        - kind: ServiceAccount
          name: sa-kustomize-controller
          namespace: flux-system
        - kind: ServiceAccount
          name: sa-helm-controller
          namespace: flux-system
    type: k8s-objects
  - name: fluxcd-CRD
    properties:
      objects:
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.8.0
          labels:
            app.kubernetes.io/component: source-controller
            app.kubernetes.io/instance: flux-system
            app.kubernetes.io/part-of: flux
            kustomize.toolkit.fluxcd.io/name: flux-system
            kustomize.toolkit.fluxcd.io/namespace: flux-system
          name: buckets.source.toolkit.fluxcd.io
        spec:
          conversion:
            strategy: None
          group: source.toolkit.fluxcd.io
          names:
            kind: Bucket
            listKind: BucketList
            plural: buckets
            singular: bucket
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .spec.endpoint
              name: Endpoint
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].message
              name: Status
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: Bucket is the Schema for the buckets API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: BucketSpec defines the desired state of an S3 compatible
                      bucket
                    properties:
                      accessFrom:
                        description: AccessFrom defines an Access Control List for
                          allowing cross-namespace references to this object.
                        properties:
                          namespaceSelectors:
                            description: NamespaceSelectors is the list of namespace
                              selectors to which this ACL applies. Items in this list
                              are evaluated using a logical OR operation.
                            items:
                              description: NamespaceSelector selects the namespaces
                                to which this ACL applies. An empty map of MatchLabels
                                matches all namespaces in a cluster.
                              properties:
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            type: array
                        required:
                        - namespaceSelectors
                        type: object
                      bucketName:
                        description: The bucket name.
                        type: string
                      endpoint:
                        description: The bucket endpoint address.
                        type: string
                      ignore:
                        description: Ignore overrides the set of excluded patterns
                          in the .sourceignore format (which is the same as .gitignore).
                          If not provided, a default will be used, consult the documentation
                          for your version to find out what those are.
                        type: string
                      insecure:
                        description: Insecure allows connecting to a non-TLS S3 HTTP
                          endpoint.
                        type: boolean
                      interval:
                        description: The interval at which to check for bucket updates.
                        type: string
                      provider:
                        default: generic
                        description: The S3 compatible storage provider name, default
                          ('generic').
                        enum:
                        - generic
                        - aws
                        - gcp
                        type: string
                      region:
                        description: The bucket region.
                        type: string
                      secretRef:
                        description: The name of the secret containing authentication
                          credentials for the Bucket.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      suspend:
                        description: This flag tells the controller to suspend the
                          reconciliation of this source.
                        type: boolean
                      timeout:
                        default: 60s
                        description: The timeout for download operations, defaults
                          to 60s.
                        type: string
                    required:
                    - bucketName
                    - endpoint
                    - interval
                    type: object
                  status:
                    default:
                      observedGeneration: -1
                    description: BucketStatus defines the observed state of a bucket
                    properties:
                      artifact:
                        description: Artifact represents the output of the last successful
                          Bucket sync.
                        properties:
                          checksum:
                            description: Checksum is the SHA256 checksum of the artifact.
                            type: string
                          lastUpdateTime:
                            description: LastUpdateTime is the timestamp corresponding
                              to the last update of this artifact.
                            format: date-time
                            type: string
                          path:
                            description: Path is the relative file path of this artifact.
                            type: string
                          revision:
                            description: Revision is a human readable identifier traceable
                              in the origin source system. It can be a Git commit
                              SHA, Git tag, a Helm index timestamp, a Helm chart version,
                              etc.
                            type: string
                          url:
                            description: URL is the HTTP address of this artifact.
                            type: string
                        required:
                        - path
                        - url
                        type: object
                      conditions:
                        description: Conditions holds the conditions for the Bucket.
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      lastHandledReconcileAt:
                        description: LastHandledReconcileAt holds the value of the
                          most recent reconcile request value, so a change of the
                          annotation value can be detected.
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the last observed generation.
                        format: int64
                        type: integer
                      url:
                        description: URL is the download link for the artifact output
                          of the last Bucket sync.
                        type: string
                    type: object
                type: object
            served: true
            storage: false
            subresources:
          - additionalPrinterColumns:
            - jsonPath: .spec.endpoint
              name: Endpoint
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            - jsonPath: .status.conditions[?(@.type=="Ready")].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].message
              name: Status
              type: string
            name: v1beta2
            schema:
              openAPIV3Schema:
                description: Bucket is the Schema for the buckets API.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: BucketSpec specifies the required configuration to
                      produce an Artifact for an object storage bucket.
                    properties:
                      accessFrom:
                        description: 'AccessFrom specifies an Access Control List
                          for allowing cross-namespace references to this object.
                          NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092'
                        properties:
                          namespaceSelectors:
                            description: NamespaceSelectors is the list of namespace
                              selectors to which this ACL applies. Items in this list
                              are evaluated using a logical OR operation.
                            items:
                              description: NamespaceSelector selects the namespaces
                                to which this ACL applies. An empty map of MatchLabels
                                matches all namespaces in a cluster.
                              properties:
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            type: array
                        required:
                        - namespaceSelectors
                        type: object
                      bucketName:
                        description: BucketName is the name of the object storage
                          bucket.
                        type: string
                      endpoint:
                        description: Endpoint is the object storage address the BucketName
                          is located at.
                        type: string
                      ignore:
                        description: Ignore overrides the set of excluded patterns
                          in the .sourceignore format (which is the same as .gitignore).
                          If not provided, a default will be used, consult the documentation
                          for your version to find out what those are.
                        type: string
                      insecure:
                        description: Insecure allows connecting to a non-TLS HTTP
                          Endpoint.
                        type: boolean
                      interval:
                        description: Interval at which to check the Endpoint for updates.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                        type: string
                      provider:
                        default: generic
                        description: Provider of the object storage bucket. Defaults
                          to 'generic', which expects an S3 (API) compatible object
                          storage.
                        enum:
                        - generic
                        - aws
                        - gcp
                        - azure
                        type: string
                      region:
                        description: Region of the Endpoint where the BucketName is
                          located in.
                        type: string
                      secretRef:
                        description: SecretRef specifies the Secret containing authentication
                          credentials for the Bucket.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      suspend:
                        description: Suspend tells the controller to suspend the reconciliation
                          of this Bucket.
                        type: boolean
                      timeout:
                        default: 60s
                        description: Timeout for fetch operations, defaults to 60s.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                        type: string
                    required:
                    - bucketName
                    - endpoint
                    - interval
                    type: object
                  status:
                    default:
                      observedGeneration: -1
                    description: BucketStatus records the observed state of a Bucket.
                    properties:
                      artifact:
                        description: Artifact represents the last successful Bucket
                          reconciliation.
                        properties:
                          checksum:
                            description: Checksum is the SHA256 checksum of the Artifact
                              file.
                            type: string
                          lastUpdateTime:
                            description: LastUpdateTime is the timestamp corresponding
                              to the last update of the Artifact.
                            format: date-time
                            type: string
                          metadata:
                            additionalProperties:
                              type: string
                            description: Metadata holds upstream information such
                              as OCI annotations.
                            type: object
                          path:
                            description: Path is the relative file path of the Artifact.
                              It can be used to locate the file in the root of the
                              Artifact storage on the local file system of the controller
                              managing the Source.
                            type: string
                          revision:
                            description: Revision is a human-readable identifier traceable
                              in the origin source system. It can be a Git commit
                              SHA, Git tag, a Helm chart version, etc.
                            type: string
                          size:
                            description: Size is the number of bytes in the file.
                            format: int64
                            type: integer
                          url:
                            description: URL is the HTTP address of the Artifact as
                              exposed by the controller managing the Source. It can
                              be used to retrieve the Artifact for consumption, e.g.
                              by another controller applying the Artifact contents.
                            type: string
                        required:
                        - path
                        - url
                        type: object
                      conditions:
                        description: Conditions holds the conditions for the Bucket.
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      lastHandledReconcileAt:
                        description: LastHandledReconcileAt holds the value of the
                          most recent reconcile request value, so a change of the
                          annotation value can be detected.
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the last observed generation
                          of the Bucket object.
                        format: int64
                        type: integer
                      observedIgnore:
                        description: ObservedIgnore is the observed exclusion patterns
                          used for constructing the source artifact.
                        type: string
                      url:
                        description: URL is the dynamic fetch link for the latest
                          Artifact. It is provided on a "best effort" basis, and using
                          the precise BucketStatus.Artifact data is recommended.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
        status:
          acceptedNames:
            kind: Bucket
            listKind: BucketList
            plural: buckets
            singular: bucket
          conditions: []
          storedVersions: []
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.8.0
          labels:
            app.kubernetes.io/component: source-controller
            app.kubernetes.io/instance: flux-system
            app.kubernetes.io/part-of: flux
            kustomize.toolkit.fluxcd.io/name: flux-system
            kustomize.toolkit.fluxcd.io/namespace: flux-system
          name: gitrepositories.source.toolkit.fluxcd.io
        spec:
          conversion:
            strategy: None
          group: source.toolkit.fluxcd.io
          names:
            kind: GitRepository
            listKind: GitRepositoryList
            plural: gitrepositories
            shortNames:
            - gitrepo
            singular: gitrepository
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .spec.url
              name: URL
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].message
              name: Status
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: GitRepository is the Schema for the gitrepositories API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: GitRepositorySpec defines the desired state of a
                      Git repository.
                    properties:
                      accessFrom:
                        description: AccessFrom defines an Access Control List for
                          allowing cross-namespace references to this object.
                        properties:
                          namespaceSelectors:
                            description: NamespaceSelectors is the list of namespace
                              selectors to which this ACL applies. Items in this list
                              are evaluated using a logical OR operation.
                            items:
                              description: NamespaceSelector selects the namespaces
                                to which this ACL applies. An empty map of MatchLabels
                                matches all namespaces in a cluster.
                              properties:
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            type: array
                        required:
                        - namespaceSelectors
                        type: object
                      gitImplementation:
                        default: go-git
                        description: Determines which git client library to use. Defaults
                          to go-git, valid values are ('go-git', 'libgit2').
                        enum:
                        - go-git
                        - libgit2
                        type: string
                      ignore:
                        description: Ignore overrides the set of excluded patterns
                          in the .sourceignore format (which is the same as .gitignore).
                          If not provided, a default will be used, consult the documentation
                          for your version to find out what those are.
                        type: string
                      include:
                        description: Extra git repositories to map into the repository
                        items:
                          description: GitRepositoryInclude defines a source with
                            a from and to path.
                          properties:
                            fromPath:
                              description: The path to copy contents from, defaults
                                to the root directory.
                              type: string
                            repository:
                              description: Reference to a GitRepository to include.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - name
                              type: object
                            toPath:
                              description: The path to copy contents to, defaults
                                to the name of the source ref.
                              type: string
                          required:
                          - repository
                          type: object
                        type: array
                      interval:
                        description: The interval at which to check for repository
                          updates.
                        type: string
                      recurseSubmodules:
                        description: When enabled, after the clone is created, initializes
                          all submodules within, using their default settings. This
                          option is available only when using the 'go-git' GitImplementation.
                        type: boolean
                      ref:
                        description: The Git reference to checkout and monitor for
                          changes, defaults to master branch.
                        properties:
                          branch:
                            description: The Git branch to checkout, defaults to master.
                            type: string
                          commit:
                            description: The Git commit SHA to checkout, if specified
                              Tag filters will be ignored.
                            type: string
                          semver:
                            description: The Git tag semver expression, takes precedence
                              over Tag.
                            type: string
                          tag:
                            description: The Git tag to checkout, takes precedence
                              over Branch.
                            type: string
                        type: object
                      secretRef:
                        description: The secret name containing the Git credentials.
                          For HTTPS repositories the secret must contain username
                          and password fields. For SSH repositories the secret must
                          contain identity and known_hosts fields.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      suspend:
                        description: This flag tells the controller to suspend the
                          reconciliation of this source.
                        type: boolean
                      timeout:
                        default: 60s
                        description: The timeout for remote Git operations like cloning,
                          defaults to 60s.
                        type: string
                      url:
                        description: The repository URL, can be a HTTP/S or SSH address.
                        pattern: ^(http|https|ssh)://.*$
                        type: string
                      verify:
                        description: Verify OpenPGP signature for the Git commit HEAD
                          points to.
                        properties:
                          mode:
                            description: Mode describes what git object should be
                              verified, currently ('head').
                            enum:
                            - head
                            type: string
                          secretRef:
                            description: The secret name containing the public keys
                              of all trusted Git authors.
                            properties:
                              name:
                                description: Name of the referent.
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - mode
                        type: object
                    required:
                    - interval
                    - url
                    type: object
                  status:
                    default:
                      observedGeneration: -1
                    description: GitRepositoryStatus defines the observed state of
                      a Git repository.
                    properties:
                      artifact:
                        description: Artifact represents the output of the last successful
                          repository sync.
                        properties:
                          checksum:
                            description: Checksum is the SHA256 checksum of the artifact.
                            type: string
                          lastUpdateTime:
                            description: LastUpdateTime is the timestamp corresponding
                              to the last update of this artifact.
                            format: date-time
                            type: string
                          path:
                            description: Path is the relative file path of this artifact.
                            type: string
                          revision:
                            description: Revision is a human readable identifier traceable
                              in the origin source system. It can be a Git commit
                              SHA, Git tag, a Helm index timestamp, a Helm chart version,
                              etc.
                            type: string
                          url:
                            description: URL is the HTTP address of this artifact.
                            type: string
                        required:
                        - path
                        - url
                        type: object
                      conditions:
                        description: Conditions holds the conditions for the GitRepository.
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      includedArtifacts:
                        description: IncludedArtifacts represents the included artifacts
                          from the last successful repository sync.
                        items:
                          description: Artifact represents the output of a source
                            synchronisation.
                          properties:
                            checksum:
                              description: Checksum is the SHA256 checksum of the
                                artifact.
                              type: string
                            lastUpdateTime:
                              description: LastUpdateTime is the timestamp corresponding
                                to the last update of this artifact.
                              format: date-time
                              type: string
                            path:
                              description: Path is the relative file path of this
                                artifact.
                              type: string
                            revision:
                              description: Revision is a human readable identifier
                                traceable in the origin source system. It can be a
                                Git commit SHA, Git tag, a Helm index timestamp, a
                                Helm chart version, etc.
                              type: string
                            url:
                              description: URL is the HTTP address of this artifact.
                              type: string
                          required:
                          - path
                          - url
                          type: object
                        type: array
                      lastHandledReconcileAt:
                        description: LastHandledReconcileAt holds the value of the
                          most recent reconcile request value, so a change of the
                          annotation value can be detected.
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the last observed generation.
                        format: int64
                        type: integer
                      url:
                        description: URL is the download link for the artifact output
                          of the last repository sync.
                        type: string
                    type: object
                type: object
            served: true
            storage: false
            subresources:
          - additionalPrinterColumns:
            - jsonPath: .spec.url
              name: URL
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            - jsonPath: .status.conditions[?(@.type=="Ready")].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].message
              name: Status
              type: string
            name: v1beta2
            schema:
              openAPIV3Schema:
                description: GitRepository is the Schema for the gitrepositories API.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: GitRepositorySpec specifies the required configuration
                      to produce an Artifact for a Git repository.
                    properties:
                      accessFrom:
                        description: 'AccessFrom specifies an Access Control List
                          for allowing cross-namespace references to this object.
                          NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092'
                        properties:
                          namespaceSelectors:
                            description: NamespaceSelectors is the list of namespace
                              selectors to which this ACL applies. Items in this list
                              are evaluated using a logical OR operation.
                            items:
                              description: NamespaceSelector selects the namespaces
                                to which this ACL applies. An empty map of MatchLabels
                                matches all namespaces in a cluster.
                              properties:
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            type: array
                        required:
                        - namespaceSelectors
                        type: object
                      gitImplementation:
                        default: go-git
                        description: 'GitImplementation specifies which Git client
                          library implementation to use. Defaults to ''go-git'', valid
                          values are (''go-git'', ''libgit2''). Deprecated: gitImplementation
                          is deprecated now that ''go-git'' is the only supported
                          implementation.'
                        enum:
                        - go-git
                        - libgit2
                        type: string
                      ignore:
                        description: Ignore overrides the set of excluded patterns
                          in the .sourceignore format (which is the same as .gitignore).
                          If not provided, a default will be used, consult the documentation
                          for your version to find out what those are.
                        type: string
                      include:
                        description: Include specifies a list of GitRepository resources
                          which Artifacts should be included in the Artifact produced
                          for this GitRepository.
                        items:
                          description: GitRepositoryInclude specifies a local reference
                            to a GitRepository which Artifact (sub-)contents must
                            be included, and where they should be placed.
                          properties:
                            fromPath:
                              description: FromPath specifies the path to copy contents
                                from, defaults to the root of the Artifact.
                              type: string
                            repository:
                              description: GitRepositoryRef specifies the GitRepository
                                which Artifact contents must be included.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - name
                              type: object
                            toPath:
                              description: ToPath specifies the path to copy contents
                                to, defaults to the name of the GitRepositoryRef.
                              type: string
                          required:
                          - repository
                          type: object
                        type: array
                      interval:
                        description: Interval at which to check the GitRepository
                          for updates.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                        type: string
                      recurseSubmodules:
                        description: RecurseSubmodules enables the initialization
                          of all submodules within the GitRepository as cloned from
                          the URL, using their default settings. This option is available
                          only when using the 'go-git' GitImplementation.
                        type: boolean
                      ref:
                        description: Reference specifies the Git reference to resolve
                          and monitor for changes, defaults to the 'master' branch.
                        properties:
                          branch:
                            description: "Branch to check out, defaults to 'master'
                              if no other field is defined. \n When GitRepositorySpec.GitImplementation
                              is set to 'go-git', a shallow clone of the specified
                              branch is performed."
                            type: string
                          commit:
                            description: "Commit SHA to check out, takes precedence
                              over all reference fields. \n When GitRepositorySpec.GitImplementation
                              is set to 'go-git', this can be combined with Branch
                              to shallow clone the branch, in which the commit is
                              expected to exist."
                            type: string
                          semver:
                            description: SemVer tag expression to check out, takes
                              precedence over Tag.
                            type: string
                          tag:
                            description: Tag to check out, takes precedence over Branch.
                            type: string
                        type: object
                      secretRef:
                        description: SecretRef specifies the Secret containing authentication
                          credentials for the GitRepository. For HTTPS repositories
                          the Secret must contain 'username' and 'password' fields.
                          For SSH repositories the Secret must contain 'identity'
                          and 'known_hosts' fields.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      suspend:
                        description: Suspend tells the controller to suspend the reconciliation
                          of this GitRepository.
                        type: boolean
                      timeout:
                        default: 60s
                        description: Timeout for Git operations like cloning, defaults
                          to 60s.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                        type: string
                      url:
                        description: URL specifies the Git repository URL, it can
                          be an HTTP/S or SSH address.
                        pattern: ^(http|https|ssh)://.*$
                        type: string
                      verify:
                        description: Verification specifies the configuration to verify
                          the Git commit signature(s).
                        properties:
                          mode:
                            description: Mode specifies what Git object should be
                              verified, currently ('head').
                            enum:
                            - head
                            type: string
                          secretRef:
                            description: SecretRef specifies the Secret containing
                              the public keys of trusted Git authors.
                            properties:
                              name:
                                description: Name of the referent.
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - mode
                        type: object
                    required:
                    - interval
                    - url
                    type: object
                  status:
                    default:
                      observedGeneration: -1
                    description: GitRepositoryStatus records the observed state of
                      a Git repository.
                    properties:
                      artifact:
                        description: Artifact represents the last successful GitRepository
                          reconciliation.
                        properties:
                          checksum:
                            description: Checksum is the SHA256 checksum of the Artifact
                              file.
                            type: string
                          lastUpdateTime:
                            description: LastUpdateTime is the timestamp corresponding
                              to the last update of the Artifact.
                            format: date-time
                            type: string
                          metadata:
                            additionalProperties:
                              type: string
                            description: Metadata holds upstream information such
                              as OCI annotations.
                            type: object
                          path:
                            description: Path is the relative file path of the Artifact.
                              It can be used to locate the file in the root of the
                              Artifact storage on the local file system of the controller
                              managing the Source.
                            type: string
                          revision:
                            description: Revision is a human-readable identifier traceable
                              in the origin source system. It can be a Git commit
                              SHA, Git tag, a Helm chart version, etc.
                            type: string
                          size:
                            description: Size is the number of bytes in the file.
                            format: int64
                            type: integer
                          url:
                            description: URL is the HTTP address of the Artifact as
                              exposed by the controller managing the Source. It can
                              be used to retrieve the Artifact for consumption, e.g.
                              by another controller applying the Artifact contents.
                            type: string
                        required:
                        - path
                        - url
                        type: object
                      conditions:
                        description: Conditions holds the conditions for the GitRepository.
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      contentConfigChecksum:
                        description: "ContentConfigChecksum is a checksum of all the
                          configurations related to the content of the source artifact:
                          - .spec.ignore - .spec.recurseSubmodules - .spec.included
                          and the checksum of the included artifacts observed in .status.observedGeneration
                          version of the object. This can be used to determine if
                          the content of the included repository has changed. It has
                          the format of `<algo>:<checksum>`, for example: `sha256:<checksum>`.
                          \n Deprecated: Replaced with explicit fields for observed
                          artifact content config in the status."
                        type: string
                      includedArtifacts:
                        description: IncludedArtifacts contains a list of the last
                          successfully included Artifacts as instructed by GitRepositorySpec.Include.
                        items:
                          description: Artifact represents the output of a Source
                            reconciliation.
                          properties:
                            checksum:
                              description: Checksum is the SHA256 checksum of the
                                Artifact file.
                              type: string
                            lastUpdateTime:
                              description: LastUpdateTime is the timestamp corresponding
                                to the last update of the Artifact.
                              format: date-time
                              type: string
                            metadata:
                              additionalProperties:
                                type: string
                              description: Metadata holds upstream information such
                                as OCI annotations.
                              type: object
                            path:
                              description: Path is the relative file path of the Artifact.
                                It can be used to locate the file in the root of the
                                Artifact storage on the local file system of the controller
                                managing the Source.
                              type: string
                            revision:
                              description: Revision is a human-readable identifier
                                traceable in the origin source system. It can be a
                                Git commit SHA, Git tag, a Helm chart version, etc.
                              type: string
                            size:
                              description: Size is the number of bytes in the file.
                              format: int64
                              type: integer
                            url:
                              description: URL is the HTTP address of the Artifact
                                as exposed by the controller managing the Source.
                                It can be used to retrieve the Artifact for consumption,
                                e.g. by another controller applying the Artifact contents.
                              type: string
                          required:
                          - path
                          - url
                          type: object
                        type: array
                      lastHandledReconcileAt:
                        description: LastHandledReconcileAt holds the value of the
                          most recent reconcile request value, so a change of the
                          annotation value can be detected.
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the last observed generation
                          of the GitRepository object.
                        format: int64
                        type: integer
                      observedIgnore:
                        description: ObservedIgnore is the observed exclusion patterns
                          used for constructing the source artifact.
                        type: string
                      observedInclude:
                        description: ObservedInclude is the observed list of GitRepository
                          resources used to to produce the current Artifact.
                        items:
                          description: GitRepositoryInclude specifies a local reference
                            to a GitRepository which Artifact (sub-)contents must
                            be included, and where they should be placed.
                          properties:
                            fromPath:
                              description: FromPath specifies the path to copy contents
                                from, defaults to the root of the Artifact.
                              type: string
                            repository:
                              description: GitRepositoryRef specifies the GitRepository
                                which Artifact contents must be included.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                              - name
                              type: object
                            toPath:
                              description: ToPath specifies the path to copy contents
                                to, defaults to the name of the GitRepositoryRef.
                              type: string
                          required:
                          - repository
                          type: object
                        type: array
                      observedRecurseSubmodules:
                        description: ObservedRecurseSubmodules is the observed resource
                          submodules configuration used to produce the current Artifact.
                        type: boolean
                      url:
                        description: URL is the dynamic fetch link for the latest
                          Artifact. It is provided on a "best effort" basis, and using
                          the precise GitRepositoryStatus.Artifact data is recommended.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
        status:
          acceptedNames:
            kind: GitRepository
            listKind: GitRepositoryList
            plural: gitrepositories
            shortNames:
            - gitrepo
            singular: gitrepository
          conditions: []
          storedVersions: []
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.8.0
          labels:
            app.kubernetes.io/component: source-controller
            app.kubernetes.io/instance: flux-system
            app.kubernetes.io/part-of: flux
            kustomize.toolkit.fluxcd.io/name: flux-system
            kustomize.toolkit.fluxcd.io/namespace: flux-system
          name: ocirepositories.source.toolkit.fluxcd.io
        spec:
          conversion:
            strategy: None
          group: source.toolkit.fluxcd.io
          names:
            kind: OCIRepository
            listKind: OCIRepositoryList
            plural: ocirepositories
            shortNames:
            - ocirepo
            singular: ocirepository
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .spec.url
              name: URL
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].message
              name: Status
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1beta2
            schema:
              openAPIV3Schema:
                description: OCIRepository is the Schema for the ocirepositories API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: OCIRepositorySpec defines the desired state of OCIRepository
                    properties:
                      certSecretRef:
                        description: "CertSecretRef can be given the name of a secret
                          containing either or both of \n - a PEM-encoded client certificate
                          (`certFile`) and private key (`keyFile`); - a PEM-encoded
                          CA certificate (`caFile`) \n and whichever are supplied,
                          will be used for connecting to the registry. The client
                          cert and key are useful if you are authenticating with a
                          certificate; the CA cert is useful if you are using a self-signed
                          server certificate."
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      ignore:
                        description: Ignore overrides the set of excluded patterns
                          in the .sourceignore format (which is the same as .gitignore).
                          If not provided, a default will be used, consult the documentation
                          for your version to find out what those are.
                        type: string
                      insecure:
                        description: Insecure allows connecting to a non-TLS HTTP
                          container registry.
                        type: boolean
                      interval:
                        description: The interval at which to check for image updates.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                        type: string
                      layerSelector:
                        description: LayerSelector specifies which layer should be
                          extracted from the OCI artifact. When not specified, the
                          first layer found in the artifact is selected.
                        properties:
                          mediaType:
                            description: MediaType specifies the OCI media type of
                              the layer which should be extracted from the OCI Artifact.
                              The first layer matching this type is selected.
                            type: string
                          operation:
                            description: Operation specifies how the selected layer
                              should be processed. By default, the layer compressed
                              content is extracted to storage. When the operation
                              is set to 'copy', the layer compressed content is persisted
                              to storage as it is.
                            enum:
                            - extract
                            - copy
                            type: string
                        type: object
                      provider:
                        default: generic
                        description: The provider used for authentication, can be
                          'aws', 'azure', 'gcp' or 'generic'. When not specified,
                          defaults to 'generic'.
                        enum:
                        - generic
                        - aws
                        - azure
                        - gcp
                        type: string
                      ref:
                        description: The OCI reference to pull and monitor for changes,
                          defaults to the latest tag.
                        properties:
                          digest:
                            description: Digest is the image digest to pull, takes
                              precedence over SemVer. The value should be in the format
                              'sha256:<HASH>'.
                            type: string
                          semver:
                            description: SemVer is the range of tags to pull selecting
                              the latest within the range, takes precedence over Tag.
                            type: string
                          tag:
                            description: Tag is the image tag to pull, defaults to
                              latest.
                            type: string
                        type: object
                      secretRef:
                        description: SecretRef contains the secret name containing
                          the registry login credentials to resolve image metadata.
                          The secret must be of type kubernetes.io/dockerconfigjson.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      serviceAccountName:
                        description: 'ServiceAccountName is the name of the Kubernetes
                          ServiceAccount used to authenticate the image pull if the
                          service account has attached pull secrets. For more information:
                          https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account'
                        type: string
                      suspend:
                        description: This flag tells the controller to suspend the
                          reconciliation of this source.
                        type: boolean
                      timeout:
                        default: 60s
                        description: The timeout for remote OCI Repository operations
                          like pulling, defaults to 60s.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                        type: string
                      url:
                        description: URL is a reference to an OCI artifact repository
                          hosted on a remote container registry.
                        pattern: ^oci://.*$
                        type: string
                      verify:
                        description: Verify contains the secret name containing the
                          trusted public keys used to verify the signature and specifies
                          which provider to use to check whether OCI image is authentic.
                        properties:
                          provider:
                            default: cosign
                            description: Provider specifies the technology used to
                              sign the OCI Artifact.
                            enum:
                            - cosign
                            type: string
                          secretRef:
                            description: SecretRef specifies the Kubernetes Secret
                              containing the trusted public keys.
                            properties:
                              name:
                                description: Name of the referent.
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - provider
                        type: object
                    required:
                    - interval
                    - url
                    type: object
                  status:
                    default:
                      observedGeneration: -1
                    description: OCIRepositoryStatus defines the observed state of
                      OCIRepository
                    properties:
                      artifact:
                        description: Artifact represents the output of the last successful
                          OCI Repository sync.
                        properties:
                          checksum:
                            description: Checksum is the SHA256 checksum of the Artifact
                              file.
                            type: string
                          lastUpdateTime:
                            description: LastUpdateTime is the timestamp corresponding
                              to the last update of the Artifact.
                            format: date-time
                            type: string
                          metadata:
                            additionalProperties:
                              type: string
                            description: Metadata holds upstream information such
                              as OCI annotations.
                            type: object
                          path:
                            description: Path is the relative file path of the Artifact.
                              It can be used to locate the file in the root of the
                              Artifact storage on the local file system of the controller
                              managing the Source.
                            type: string
                          revision:
                            description: Revision is a human-readable identifier traceable
                              in the origin source system. It can be a Git commit
                              SHA, Git tag, a Helm chart version, etc.
                            type: string
                          size:
                            description: Size is the number of bytes in the file.
                            format: int64
                            type: integer
                          url:
                            description: URL is the HTTP address of the Artifact as
                              exposed by the controller managing the Source. It can
                              be used to retrieve the Artifact for consumption, e.g.
                              by another controller applying the Artifact contents.
                            type: string
                        required:
                        - path
                        - url
                        type: object
                      conditions:
                        description: Conditions holds the conditions for the OCIRepository.
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      contentConfigChecksum:
                        description: "ContentConfigChecksum is a checksum of all the
                          configurations related to the content of the source artifact:
                          - .spec.ignore - .spec.layerSelector observed in .status.observedGeneration
                          version of the object. This can be used to determine if
                          the content configuration has changed and the artifact needs
                          to be rebuilt. It has the format of `<algo>:<checksum>`,
                          for example: `sha256:<checksum>`. \n Deprecated: Replaced
                          with explicit fields for observed artifact content config
                          in the status."
                        type: string
                      lastHandledReconcileAt:
                        description: LastHandledReconcileAt holds the value of the
                          most recent reconcile request value, so a change of the
                          annotation value can be detected.
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the last observed generation.
                        format: int64
                        type: integer
                      observedIgnore:
                        description: ObservedIgnore is the observed exclusion patterns
                          used for constructing the source artifact.
                        type: string
                      observedLayerSelector:
                        description: ObservedLayerSelector is the observed layer selector
                          used for constructing the source artifact.
                        properties:
                          mediaType:
                            description: MediaType specifies the OCI media type of
                              the layer which should be extracted from the OCI Artifact.
                              The first layer matching this type is selected.
                            type: string
                          operation:
                            description: Operation specifies how the selected layer
                              should be processed. By default, the layer compressed
                              content is extracted to storage. When the operation
                              is set to 'copy', the layer compressed content is persisted
                              to storage as it is.
                            enum:
                            - extract
                            - copy
                            type: string
                        type: object
                      url:
                        description: URL is the download link for the artifact output
                          of the last OCI Repository sync.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
        status:
          acceptedNames:
            kind: OCIRepository
            listKind: OCIRepositoryList
            plural: ocirepositories
            shortNames:
            - ocirepo
            singular: ocirepository
          conditions: []
          storedVersions: []
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.8.0
          labels:
            app.kubernetes.io/component: source-controller
            app.kubernetes.io/instance: flux-system
            app.kubernetes.io/part-of: flux
            kustomize.toolkit.fluxcd.io/name: flux-system
            kustomize.toolkit.fluxcd.io/namespace: flux-system
          name: helmcharts.source.toolkit.fluxcd.io
        spec:
          conversion:
            strategy: None
          group: source.toolkit.fluxcd.io
          names:
            kind: HelmChart
            listKind: HelmChartList
            plural: helmcharts
            shortNames:
            - hc
            singular: helmchart
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .spec.chart
              name: Chart
              type: string
            - jsonPath: .spec.version
              name: Version
              type: string
            - jsonPath: .spec.sourceRef.kind
              name: Source Kind
              type: string
            - jsonPath: .spec.sourceRef.name
              name: Source Name
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].message
              name: Status
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: HelmChart is the Schema for the helmcharts API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: HelmChartSpec defines the desired state of a Helm
                      chart.
                    properties:
                      accessFrom:
                        description: AccessFrom defines an Access Control List for
                          allowing cross-namespace references to this object.
                        properties:
                          namespaceSelectors:
                            description: NamespaceSelectors is the list of namespace
                              selectors to which this ACL applies. Items in this list
                              are evaluated using a logical OR operation.
                            items:
                              description: NamespaceSelector selects the namespaces
                                to which this ACL applies. An empty map of MatchLabels
                                matches all namespaces in a cluster.
                              properties:
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            type: array
                        required:
                        - namespaceSelectors
                        type: object
                      chart:
                        description: The name or path the Helm chart is available
                          at in the SourceRef.
                        type: string
                      interval:
                        description: The interval at which to check the Source for
                          updates.
                        type: string
                      reconcileStrategy:
                        default: ChartVersion
                        description: Determines what enables the creation of a new
                          artifact. Valid values are ('ChartVersion', 'Revision').
                          See the documentation of the values for an explanation on
                          their behavior. Defaults to ChartVersion when omitted.
                        enum:
                        - ChartVersion
                        - Revision
                        type: string
                      sourceRef:
                        description: The reference to the Source the chart is available
                          at.
                        properties:
                          apiVersion:
                            description: APIVersion of the referent.
                            type: string
                          kind:
                            description: Kind of the referent, valid values are ('HelmRepository',
                              'GitRepository', 'Bucket').
                            enum:
                            - HelmRepository
                            - GitRepository
                            - Bucket
                            type: string
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      suspend:
                        description: This flag tells the controller to suspend the
                          reconciliation of this source.
                        type: boolean
                      valuesFile:
                        description: Alternative values file to use as the default
                          chart values, expected to be a relative path in the SourceRef.
                          Deprecated in favor of ValuesFiles, for backwards compatibility
                          the file defined here is merged before the ValuesFiles items.
                          Ignored when omitted.
                        type: string
                      valuesFiles:
                        description: Alternative list of values files to use as the
                          chart values (values.yaml is not included by default), expected
                          to be a relative path in the SourceRef. Values files are
                          merged in the order of this list with the last file overriding
                          the first. Ignored when omitted.
                        items:
                          type: string
                        type: array
                      version:
                        default: '*'
                        description: The chart version semver expression, ignored
                          for charts from GitRepository and Bucket sources. Defaults
                          to latest when omitted.
                        type: string
                    required:
                    - chart
                    - interval
                    - sourceRef
                    type: object
                  status:
                    default:
                      observedGeneration: -1
                    description: HelmChartStatus defines the observed state of the
                      HelmChart.
                    properties:
                      artifact:
                        description: Artifact represents the output of the last successful
                          chart sync.
                        properties:
                          checksum:
                            description: Checksum is the SHA256 checksum of the artifact.
                            type: string
                          lastUpdateTime:
                            description: LastUpdateTime is the timestamp corresponding
                              to the last update of this artifact.
                            format: date-time
                            type: string
                          path:
                            description: Path is the relative file path of this artifact.
                            type: string
                          revision:
                            description: Revision is a human readable identifier traceable
                              in the origin source system. It can be a Git commit
                              SHA, Git tag, a Helm index timestamp, a Helm chart version,
                              etc.
                            type: string
                          url:
                            description: URL is the HTTP address of this artifact.
                            type: string
                        required:
                        - path
                        - url
                        type: object
                      conditions:
                        description: Conditions holds the conditions for the HelmChart.
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      lastHandledReconcileAt:
                        description: LastHandledReconcileAt holds the value of the
                          most recent reconcile request value, so a change of the
                          annotation value can be detected.
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the last observed generation.
                        format: int64
                        type: integer
                      url:
                        description: URL is the download link for the last chart pulled.
                        type: string
                    type: object
                type: object
            served: true
            storage: false
            subresources:
          - additionalPrinterColumns:
            - jsonPath: .spec.chart
              name: Chart
              type: string
            - jsonPath: .spec.version
              name: Version
              type: string
            - jsonPath: .spec.sourceRef.kind
              name: Source Kind
              type: string
            - jsonPath: .spec.sourceRef.name
              name: Source Name
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            - jsonPath: .status.conditions[?(@.type=="Ready")].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].message
              name: Status
              type: string
            name: v1beta2
            schema:
              openAPIV3Schema:
                description: HelmChart is the Schema for the helmcharts API.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: HelmChartSpec specifies the desired state of a Helm
                      chart.
                    properties:
                      accessFrom:
                        description: 'AccessFrom specifies an Access Control List
                          for allowing cross-namespace references to this object.
                          NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092'
                        properties:
                          namespaceSelectors:
                            description: NamespaceSelectors is the list of namespace
                              selectors to which this ACL applies. Items in this list
                              are evaluated using a logical OR operation.
                            items:
                              description: NamespaceSelector selects the namespaces
                                to which this ACL applies. An empty map of MatchLabels
                                matches all namespaces in a cluster.
                              properties:
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            type: array
                        required:
                        - namespaceSelectors
                        type: object
                      chart:
                        description: Chart is the name or path the Helm chart is available
                          at in the SourceRef.
                        type: string
                      interval:
                        description: Interval is the interval at which to check the
                          Source for updates.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                        type: string
                      reconcileStrategy:
                        default: ChartVersion
                        description: ReconcileStrategy determines what enables the
                          creation of a new artifact. Valid values are ('ChartVersion',
                          'Revision'). See the documentation of the values for an
                          explanation on their behavior. Defaults to ChartVersion
                          when omitted.
                        enum:
                        - ChartVersion
                        - Revision
                        type: string
                      sourceRef:
                        description: SourceRef is the reference to the Source the
                          chart is available at.
                        properties:
                          apiVersion:
                            description: APIVersion of the referent.
                            type: string
                          kind:
                            description: Kind of the referent, valid values are ('HelmRepository',
                              'GitRepository', 'Bucket').
                            enum:
                            - HelmRepository
                            - GitRepository
                            - Bucket
                            type: string
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      suspend:
                        description: Suspend tells the controller to suspend the reconciliation
                          of this source.
                        type: boolean
                      valuesFile:
                        description: ValuesFile is an alternative values file to use
                          as the default chart values, expected to be a relative path
                          in the SourceRef. Deprecated in favor of ValuesFiles, for
                          backwards compatibility the file specified here is merged
                          before the ValuesFiles items. Ignored when omitted.
                        type: string
                      valuesFiles:
                        description: ValuesFiles is an alternative list of values
                          files to use as the chart values (values.yaml is not included
                          by default), expected to be a relative path in the SourceRef.
                          Values files are merged in the order of this list with the
                          last file overriding the first. Ignored when omitted.
                        items:
                          type: string
                        type: array
                      verify:
                        description: Verify contains the secret name containing the
                          trusted public keys used to verify the signature and specifies
                          which provider to use to check whether OCI image is authentic.
                          This field is only supported when using HelmRepository source
                          with spec.type 'oci'. Chart dependencies, which are not
                          bundled in the umbrella chart artifact, are not verified.
                        properties:
                          provider:
                            default: cosign
                            description: Provider specifies the technology used to
                              sign the OCI Artifact.
                            enum:
                            - cosign
                            type: string
                          secretRef:
                            description: SecretRef specifies the Kubernetes Secret
                              containing the trusted public keys.
                            properties:
                              name:
                                description: Name of the referent.
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - provider
                        type: object
                      version:
                        default: '*'
                        description: Version is the chart version semver expression,
                          ignored for charts from GitRepository and Bucket sources.
                          Defaults to latest when omitted.
                        type: string
                    required:
                    - chart
                    - interval
                    - sourceRef
                    type: object
                  status:
                    default:
                      observedGeneration: -1
                    description: HelmChartStatus records the observed state of the
                      HelmChart.
                    properties:
                      artifact:
                        description: Artifact represents the output of the last successful
                          reconciliation.
                        properties:
                          checksum:
                            description: Checksum is the SHA256 checksum of the Artifact
                              file.
                            type: string
                          lastUpdateTime:
                            description: LastUpdateTime is the timestamp corresponding
                              to the last update of the Artifact.
                            format: date-time
                            type: string
                          metadata:
                            additionalProperties:
                              type: string
                            description: Metadata holds upstream information such
                              as OCI annotations.
                            type: object
                          path:
                            description: Path is the relative file path of the Artifact.
                              It can be used to locate the file in the root of the
                              Artifact storage on the local file system of the controller
                              managing the Source.
                            type: string
                          revision:
                            description: Revision is a human-readable identifier traceable
                              in the origin source system. It can be a Git commit
                              SHA, Git tag, a Helm chart version, etc.
                            type: string
                          size:
                            description: Size is the number of bytes in the file.
                            format: int64
                            type: integer
                          url:
                            description: URL is the HTTP address of the Artifact as
                              exposed by the controller managing the Source. It can
                              be used to retrieve the Artifact for consumption, e.g.
                              by another controller applying the Artifact contents.
                            type: string
                        required:
                        - path
                        - url
                        type: object
                      conditions:
                        description: Conditions holds the conditions for the HelmChart.
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      lastHandledReconcileAt:
                        description: LastHandledReconcileAt holds the value of the
                          most recent reconcile request value, so a change of the
                          annotation value can be detected.
                        type: string
                      observedChartName:
                        description: ObservedChartName is the last observed chart
                          name as specified by the resolved chart reference.
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the last observed generation
                          of the HelmChart object.
                        format: int64
                        type: integer
                      observedSourceArtifactRevision:
                        description: ObservedSourceArtifactRevision is the last observed
                          Artifact.Revision of the HelmChartSpec.SourceRef.
                        type: string
                      url:
                        description: URL is the dynamic fetch link for the latest
                          Artifact. It is provided on a "best effort" basis, and using
                          the precise BucketStatus.Artifact data is recommended.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
        status:
          acceptedNames:
            kind: HelmChart
            listKind: HelmChartList
            plural: helmcharts
            shortNames:
            - hc
            singular: helmchart
          conditions: []
          storedVersions: []
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.8.0
          labels:
            app.kubernetes.io/component: helm-controller
            app.kubernetes.io/instance: flux-system
            app.kubernetes.io/part-of: flux
            kustomize.toolkit.fluxcd.io/name: flux-system
            kustomize.toolkit.fluxcd.io/namespace: flux-system
          name: helmreleases.helm.toolkit.fluxcd.io
        spec:
          conversion:
            strategy: None
          group: helm.toolkit.fluxcd.io
          names:
            kind: HelmRelease
            listKind: HelmReleaseList
            plural: helmreleases
            shortNames:
            - hr
            singular: helmrelease
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            - jsonPath: .status.conditions[?(@.type=="Ready")].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].message
              name: Status
              type: string
            name: v2beta1
            schema:
              openAPIV3Schema:
                description: HelmRelease is the Schema for the helmreleases API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: HelmReleaseSpec defines the desired state of a Helm
                      release.
                    properties:
                      chart:
                        description: Chart defines the template of the v1beta2.HelmChart
                          that should be created for this HelmRelease.
                        properties:
                          spec:
                            description: Spec holds the template for the v1beta2.HelmChartSpec
                              for this HelmRelease.
                            properties:
                              chart:
                                description: The name or path the Helm chart is available
                                  at in the SourceRef.
                                type: string
                              interval:
                                description: Interval at which to check the v1beta2.Source
                                  for updates. Defaults to 'HelmReleaseSpec.Interval'.
                                pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                                type: string
                              reconcileStrategy:
                                default: ChartVersion
                                description: Determines what enables the creation
                                  of a new artifact. Valid values are ('ChartVersion',
                                  'Revision'). See the documentation of the values
                                  for an explanation on their behavior. Defaults to
                                  ChartVersion when omitted.
                                enum:
                                - ChartVersion
                                - Revision
                                type: string
                              sourceRef:
                                description: The name and namespace of the v1beta2.Source
                                  the chart is available at.
                                properties:
                                  apiVersion:
                                    description: APIVersion of the referent.
                                    type: string
                                  kind:
                                    description: Kind of the referent.
                                    enum:
                                    - HelmRepository
                                    - GitRepository
                                    - Bucket
                                    type: string
                                  name:
                                    description: Name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: Namespace of the referent.
                                    maxLength: 63
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                type: object
                              valuesFile:
                                description: Alternative values file to use as the
                                  default chart values, expected to be a relative
                                  path in the SourceRef. Deprecated in favor of ValuesFiles,
                                  for backwards compatibility the file defined here
                                  is merged before the ValuesFiles items. Ignored
                                  when omitted.
                                type: string
                              valuesFiles:
                                description: Alternative list of values files to use
                                  as the chart values (values.yaml is not included
                                  by default), expected to be a relative path in the
                                  SourceRef. Values files are merged in the order
                                  of this list with the last file overriding the first.
                                  Ignored when omitted.
                                items:
                                  type: string
                                type: array
                              verify:
                                description: Verify contains the secret name containing
                                  the trusted public keys used to verify the signature
                                  and specifies which provider to use to check whether
                                  OCI image is authentic. This field is only supported
                                  for OCI sources. Chart dependencies, which are not
                                  bundled in the umbrella chart artifact, are not
                                  verified.
                                properties:
                                  provider:
                                    default: cosign
                                    description: Provider specifies the technology
                                      used to sign the OCI Helm chart.
                                    enum:
                                    - cosign
                                    type: string
                                  secretRef:
                                    description: SecretRef specifies the Kubernetes
                                      Secret containing the trusted public keys.
                                    properties:
                                      name:
                                        description: Name of the referent.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - provider
                                type: object
                              version:
                                default: '*'
                                description: Version semver expression, ignored for
                                  charts from v1beta2.GitRepository and v1beta2.Bucket
                                  sources. Defaults to latest when omitted.
                                type: string
                            required:
                            - chart
                            - sourceRef
                            type: object
                        required:
                        - spec
                        type: object
                      dependsOn:
                        description: DependsOn may contain a meta.NamespacedObjectReference
                          slice with references to HelmRelease resources that must
                          be ready before this HelmRelease can be reconciled.
                        items:
                          description: NamespacedObjectReference contains enough information
                            to locate the referenced Kubernetes resource object in
                            any namespace.
                          properties:
                            name:
                              description: Name of the referent.
                              type: string
                            namespace:
                              description: Namespace of the referent, when not specified
                                it acts as LocalObjectReference.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      install:
                        description: Install holds the configuration for Helm install
                          actions for this HelmRelease.
                        properties:
                          crds:
                            description: "CRDs upgrade CRDs from the Helm Chart's
                              crds directory according to the CRD upgrade policy provided
                              here. Valid values are `Skip`, `Create` or `CreateReplace`.
                              Default is `Create` and if omitted CRDs are installed
                              but not updated. \n Skip: do neither install nor replace
                              (update) any CRDs. \n Create: new CRDs are created,
                              existing CRDs are neither updated nor deleted. \n CreateReplace:
                              new CRDs are created, existing CRDs are updated (replaced)
                              but not deleted. \n By default, CRDs are applied (installed)
                              during Helm install action. With this option users can
                              opt-in to CRD replace existing CRDs on Helm install
                              actions, which is not (yet) natively supported by Helm.
                              https://helm.sh/docs/chart_best_practices/custom_resource_definitions."
                            enum:
                            - Skip
                            - Create
                            - CreateReplace
                            type: string
                          createNamespace:
                            description: CreateNamespace tells the Helm install action
                              to create the HelmReleaseSpec.TargetNamespace if it
                              does not exist yet. On uninstall, the namespace will
                              not be garbage collected.
                            type: boolean
                          disableHooks:
                            description: DisableHooks prevents hooks from running
                              during the Helm install action.
                            type: boolean
                          disableOpenAPIValidation:
                            description: DisableOpenAPIValidation prevents the Helm
                              install action from validating rendered templates against
                              the Kubernetes OpenAPI Schema.
                            type: boolean
                          disableWait:
                            description: DisableWait disables the waiting for resources
                              to be ready after a Helm install has been performed.
                            type: boolean
                          disableWaitForJobs:
                            description: DisableWaitForJobs disables waiting for jobs
                              to complete after a Helm install has been performed.
                            type: boolean
                          remediation:
                            description: Remediation holds the remediation configuration
                              for when the Helm install action for the HelmRelease
                              fails. The default is to not perform any action.
                            properties:
                              ignoreTestFailures:
                                description: IgnoreTestFailures tells the controller
                                  to skip remediation when the Helm tests are run
                                  after an install action but fail. Defaults to 'Test.IgnoreFailures'.
                                type: boolean
                              remediateLastFailure:
                                description: RemediateLastFailure tells the controller
                                  to remediate the last failure, when no retries remain.
                                  Defaults to 'false'.
                                type: boolean
                              retries:
                                description: Retries is the number of retries that
                                  should be attempted on failures before bailing.
                                  Remediation, using an uninstall, is performed between
                                  each attempt. Defaults to '0', a negative integer
                                  equals to unlimited retries.
                                type: integer
                            type: object
                          replace:
                            description: Replace tells the Helm install action to
                              re-use the 'ReleaseName', but only if that name is a
                              deleted release which remains in the history.
                            type: boolean
                          skipCRDs:
                            description: "SkipCRDs tells the Helm install action to
                              not install any CRDs. By default, CRDs are installed
                              if not already present. \n Deprecated use CRD policy
                              (`crds`) attribute with value `Skip` instead."
                            type: boolean
                          timeout:
                            description: Timeout is the time to wait for any individual
                              Kubernetes operation (like Jobs for hooks) during the
                              performance of a Helm install action. Defaults to 'HelmReleaseSpec.Timeout'.
                            pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                            type: string
                        type: object
                      interval:
                        description: Interval at which to reconcile the Helm release.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                        type: string
                      kubeConfig:
                        description: KubeConfig for reconciling the HelmRelease on
                          a remote cluster. When used in combination with HelmReleaseSpec.ServiceAccountName,
                          forces the controller to act on behalf of that Service Account
                          at the target cluster. If the --default-service-account
                          flag is set, its value will be used as a controller level
                          fallback for when HelmReleaseSpec.ServiceAccountName is
                          empty.
                        properties:
                          secretRef:
                            description: SecretRef holds the name to a secret that
                              contains a key with the kubeconfig file as the value.
                              If no key is specified the key will default to 'value'.
                              The secret must be in the same namespace as the HelmRelease.
                              It is recommended that the kubeconfig is self-contained,
                              and the secret is regularly updated if credentials such
                              as a cloud-access-token expire. Cloud specific `cmd-path`
                              auth helpers will not function without adding binaries
                              and credentials to the Pod that is responsible for reconciling
                              the HelmRelease.
                            properties:
                              key:
                                description: Key in the Secret, when not specified
                                  an implementation-specific default key is used.
                                type: string
                              name:
                                description: Name of the Secret.
                                type: string
                            required:
                            - name
                            type: object
                        type: object
                      maxHistory:
                        description: MaxHistory is the number of revisions saved by
                          Helm for this HelmRelease. Use '0' for an unlimited number
                          of revisions; defaults to '10'.
                        type: integer
                      postRenderers:
                        description: PostRenderers holds an array of Helm PostRenderers,
                          which will be applied in order of their definition.
                        items:
                          description: PostRenderer contains a Helm PostRenderer specification.
                          properties:
                            kustomize:
                              description: Kustomization to apply as PostRenderer.
                              properties:
                                images:
                                  description: Images is a list of (image name, new
                                    name, new tag or digest) for changing image names,
                                    tags or digests. This can also be achieved with
                                    a patch, but this operator is simpler to specify.
                                  items:
                                    description: Image contains an image name, a new
                                      name, a new tag or digest, which will replace
                                      the original name and tag.
                                    properties:
                                      digest:
                                        description: Digest is the value used to replace
                                          the original image tag. If digest is present
                                          NewTag value is ignored.
                                        type: string
                                      name:
                                        description: Name is a tag-less image name.
                                        type: string
                                      newName:
                                        description: NewName is the value used to
                                          replace the original name.
                                        type: string
                                      newTag:
                                        description: NewTag is the value used to replace
                                          the original tag.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                                patches:
                                  description: Strategic merge and JSON patches, defined
                                    as inline YAML objects, capable of targeting objects
                                    based on kind, label and annotation selectors.
                                  items:
                                    description: Patch contains an inline StrategicMerge
                                      or JSON6902 patch, and the target the patch
                                      should be applied to.
                                    properties:
                                      patch:
                                        description: Patch contains an inline StrategicMerge
                                          patch or an inline JSON6902 patch with an
                                          array of operation objects.
                                        type: string
                                      target:
                                        description: Target points to the resources
                                          that the patch document should be applied
                                          to.
                                        properties:
                                          annotationSelector:
                                            description: AnnotationSelector is a string
                                              that follows the label selection expression
                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                              It matches with the resource annotations.
                                            type: string
                                          group:
                                            description: Group is the API group to
                                              select resources from. Together with
                                              Version and Kind it is capable of unambiguously
                                              identifying and/or selecting resources.
                                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                            type: string
                                          kind:
                                            description: Kind of the API Group to
                                              select resources from. Together with
                                              Group and Version it is capable of unambiguously
                                              identifying and/or selecting resources.
                                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                            type: string
                                          labelSelector:
                                            description: LabelSelector is a string
                                              that follows the label selection expression
                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                              It matches with the resource labels.
                                            type: string
                                          name:
                                            description: Name to match resources with.
                                            type: string
                                          namespace:
                                            description: Namespace to select resources
                                              from.
                                            type: string
                                          version:
                                            description: Version of the API Group
                                              to select resources from. Together with
                                              Group and Kind it is capable of unambiguously
                                              identifying and/or selecting resources.
                                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                                patchesJson6902:
                                  description: JSON 6902 patches, defined as inline
                                    YAML objects.
                                  items:
                                    description: JSON6902Patch contains a JSON6902
                                      patch and the target the patch should be applied
                                      to.
                                    properties:
                                      patch:
                                        description: Patch contains the JSON6902 patch
                                          document with an array of operation objects.
                                        items:
                                          description: JSON6902 is a JSON6902 operation
                                            object. https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                          properties:
                                            from:
                                              description: From contains a JSON-pointer
                                                value that references a location within
                                                the target document where the operation
                                                is performed. The meaning of the value
                                                depends on the value of Op, and is
                                                NOT taken into account by all operations.
                                              type: string
                                            op:
                                              description: Op indicates the operation
                                                to perform. Its value MUST be one
                                                of "add", "remove", "replace", "move",
                                                "copy", or "test". https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                              enum:
                                              - test
                                              - remove
                                              - add
                                              - replace
                                              - move
                                              - copy
                                              type: string
                                            path:
                                              description: Path contains the JSON-pointer
                                                value that references a location within
                                                the target document where the operation
                                                is performed. The meaning of the value
                                                depends on the value of Op.
                                              type: string
                                            value:
                                              description: Value contains a valid
                                                JSON structure. The meaning of the
                                                value depends on the value of Op,
                                                and is NOT taken into account by all
                                                operations.
                                              x-kubernetes-preserve-unknown-fields: true
                                          required:
                                          - op
                                          - path
                                          type: object
                                        type: array
                                      target:
                                        description: Target points to the resources
                                          that the patch document should be applied
                                          to.
                                        properties:
                                          annotationSelector:
                                            description: AnnotationSelector is a string
                                              that follows the label selection expression
                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                              It matches with the resource annotations.
                                            type: string
                                          group:
                                            description: Group is the API group to
                                              select resources from. Together with
                                              Version and Kind it is capable of unambiguously
                                              identifying and/or selecting resources.
                                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                            type: string
                                          kind:
                                            description: Kind of the API Group to
                                              select resources from. Together with
                                              Group and Version it is capable of unambiguously
                                              identifying and/or selecting resources.
                                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                            type: string
                                          labelSelector:
                                            description: LabelSelector is a string
                                              that follows the label selection expression
                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                              It matches with the resource labels.
                                            type: string
                                          name:
                                            description: Name to match resources with.
                                            type: string
                                          namespace:
                                            description: Namespace to select resources
                                              from.
                                            type: string
                                          version:
                                            description: Version of the API Group
                                              to select resources from. Together with
                                              Group and Kind it is capable of unambiguously
                                              identifying and/or selecting resources.
                                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                            type: string
                                        type: object
                                    required:
                                    - patch
                                    - target
                                    type: object
                                  type: array
                                patchesStrategicMerge:
                                  description: Strategic merge patches, defined as
                                    inline YAML objects.
                                  items:
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                              type: object
                          type: object
                        type: array
                      releaseName:
                        description: ReleaseName used for the Helm release. Defaults
                          to a composition of '[TargetNamespace-]Name'.
                        maxLength: 53
                        minLength: 1
                        type: string
                      rollback:
                        description: Rollback holds the configuration for Helm rollback
                          actions for this HelmRelease.
                        properties:
                          cleanupOnFail:
                            description: CleanupOnFail allows deletion of new resources
                              created during the Helm rollback action when it fails.
                            type: boolean
                          disableHooks:
                            description: DisableHooks prevents hooks from running
                              during the Helm rollback action.
                            type: boolean
                          disableWait:
                            description: DisableWait disables the waiting for resources
                              to be ready after a Helm rollback has been performed.
                            type: boolean
                          disableWaitForJobs:
                            description: DisableWaitForJobs disables waiting for jobs
                              to complete after a Helm rollback has been performed.
                            type: boolean
                          force:
                            description: Force forces resource updates through a replacement
                              strategy.
                            type: boolean
                          recreate:
                            description: Recreate performs pod restarts for the resource
                              if applicable.
                            type: boolean
                          timeout:
                            description: Timeout is the time to wait for any individual
                              Kubernetes operation (like Jobs for hooks) during the
                              performance of a Helm rollback action. Defaults to 'HelmReleaseSpec.Timeout'.
                            pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                            type: string
                        type: object
                      serviceAccountName:
                        description: The name of the Kubernetes service account to
                          impersonate when reconciling this HelmRelease.
                        type: string
                      storageNamespace:
                        description: StorageNamespace used for the Helm storage. Defaults
                          to the namespace of the HelmRelease.
                        maxLength: 63
                        minLength: 1
                        type: string
                      suspend:
                        description: Suspend tells the controller to suspend reconciliation
                          for this HelmRelease, it does not apply to already started
                          reconciliations. Defaults to false.
                        type: boolean
                      targetNamespace:
                        description: TargetNamespace to target when performing operations
                          for the HelmRelease. Defaults to the namespace of the HelmRelease.
                        maxLength: 63
                        minLength: 1
                        type: string
                      test:
                        description: Test holds the configuration for Helm test actions
                          for this HelmRelease.
                        properties:
                          enable:
                            description: Enable enables Helm test actions for this
                              HelmRelease after an Helm install or upgrade action
                              has been performed.
                            type: boolean
                          ignoreFailures:
                            description: IgnoreFailures tells the controller to skip
                              remediation when the Helm tests are run but fail. Can
                              be overwritten for tests run after install or upgrade
                              actions in 'Install.IgnoreTestFailures' and 'Upgrade.IgnoreTestFailures'.
                            type: boolean
                          timeout:
                            description: Timeout is the time to wait for any individual
                              Kubernetes operation during the performance of a Helm
                              test action. Defaults to 'HelmReleaseSpec.Timeout'.
                            pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                            type: string
                        type: object
                      timeout:
                        description: Timeout is the time to wait for any individual
                          Kubernetes operation (like Jobs for hooks) during the performance
                          of a Helm action. Defaults to '5m0s'.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                        type: string
                      uninstall:
                        description: Uninstall holds the configuration for Helm uninstall
                          actions for this HelmRelease.
                        properties:
                          disableHooks:
                            description: DisableHooks prevents hooks from running
                              during the Helm rollback action.
                            type: boolean
                          disableWait:
                            description: DisableWait disables waiting for all the
                              resources to be deleted after a Helm uninstall is performed.
                            type: boolean
                          keepHistory:
                            description: KeepHistory tells Helm to remove all associated
                              resources and mark the release as deleted, but retain
                              the release history.
                            type: boolean
                          timeout:
                            description: Timeout is the time to wait for any individual
                              Kubernetes operation (like Jobs for hooks) during the
                              performance of a Helm uninstall action. Defaults to
                              'HelmReleaseSpec.Timeout'.
                            pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                            type: string
                        type: object
                      upgrade:
                        description: Upgrade holds the configuration for Helm upgrade
                          actions for this HelmRelease.
                        properties:
                          cleanupOnFail:
                            description: CleanupOnFail allows deletion of new resources
                              created during the Helm upgrade action when it fails.
                            type: boolean
                          crds:
                            description: "CRDs upgrade CRDs from the Helm Chart's
                              crds directory according to the CRD upgrade policy provided
                              here. Valid values are `Skip`, `Create` or `CreateReplace`.
                              Default is `Skip` and if omitted CRDs are neither installed
                              nor upgraded. \n Skip: do neither install nor replace
                              (update) any CRDs. \n Create: new CRDs are created,
                              existing CRDs are neither updated nor deleted. \n CreateReplace:
                              new CRDs are created, existing CRDs are updated (replaced)
                              but not deleted. \n By default, CRDs are not applied
                              during Helm upgrade action. With this option users can
                              opt-in to CRD upgrade, which is not (yet) natively supported
                              by Helm. https://helm.sh/docs/chart_best_practices/custom_resource_definitions."
                            enum:
                            - Skip
                            - Create
                            - CreateReplace
                            type: string
                          disableHooks:
                            description: DisableHooks prevents hooks from running
                              during the Helm upgrade action.
                            type: boolean
                          disableOpenAPIValidation:
                            description: DisableOpenAPIValidation prevents the Helm
                              upgrade action from validating rendered templates against
                              the Kubernetes OpenAPI Schema.
                            type: boolean
                          disableWait:
                            description: DisableWait disables the waiting for resources
                              to be ready after a Helm upgrade has been performed.
                            type: boolean
                          disableWaitForJobs:
                            description: DisableWaitForJobs disables waiting for jobs
                              to complete after a Helm upgrade has been performed.
                            type: boolean
                          force:
                            description: Force forces resource updates through a replacement
                              strategy.
                            type: boolean
                          preserveValues:
                            description: PreserveValues will make Helm reuse the last
                              release's values and merge in overrides from 'Values'.
                              Setting this flag makes the HelmRelease non-declarative.
                            type: boolean
                          remediation:
                            description: Remediation holds the remediation configuration
                              for when the Helm upgrade action for the HelmRelease
                              fails. The default is to not perform any action.
                            properties:
                              ignoreTestFailures:
                                description: IgnoreTestFailures tells the controller
                                  to skip remediation when the Helm tests are run
                                  after an upgrade action but fail. Defaults to 'Test.IgnoreFailures'.
                                type: boolean
                              remediateLastFailure:
                                description: RemediateLastFailure tells the controller
                                  to remediate the last failure, when no retries remain.
                                  Defaults to 'false' unless 'Retries' is greater
                                  than 0.
                                type: boolean
                              retries:
                                description: Retries is the number of retries that
                                  should be attempted on failures before bailing.
                                  Remediation, using 'Strategy', is performed between
                                  each attempt. Defaults to '0', a negative integer
                                  equals to unlimited retries.
                                type: integer
                              strategy:
                                description: Strategy to use for failure remediation.
                                  Defaults to 'rollback'.
                                enum:
                                - rollback
                                - uninstall
                                type: string
                            type: object
                          timeout:
                            description: Timeout is the time to wait for any individual
                              Kubernetes operation (like Jobs for hooks) during the
                              performance of a Helm upgrade action. Defaults to 'HelmReleaseSpec.Timeout'.
                            pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                            type: string
                        type: object
                      values:
                        description: Values holds the values for this Helm release.
                        x-kubernetes-preserve-unknown-fields: true
                      valuesFrom:
                        description: ValuesFrom holds references to resources containing
                          Helm values for this HelmRelease, and information about
                          how they should be merged.
                        items:
                          description: ValuesReference contains a reference to a resource
                            containing Helm values, and optionally the key they can
                            be found at.
                          properties:
                            kind:
                              description: Kind of the values referent, valid values
                                are ('Secret', 'ConfigMap').
                              enum:
                              - Secret
                              - ConfigMap
                              type: string
                            name:
                              description: Name of the values referent. Should reside
                                in the same namespace as the referring resource.
                              maxLength: 253
                              minLength: 1
                              type: string
                            optional:
                              description: Optional marks this ValuesReference as
                                optional. When set, a not found error for the values
                                reference is ignored, but any ValuesKey, TargetPath
                                or transient error will still result in a reconciliation
                                failure.
                              type: boolean
                            targetPath:
                              description: TargetPath is the YAML dot notation path
                                the value should be merged at. When set, the ValuesKey
                                is expected to be a single flat value. Defaults to
                                'None', which results in the values getting merged
                                at the root.
                              maxLength: 250
                              pattern: ^([a-zA-Z0-9_\-.\\\/]|\[[0-9]{1,5}\])+$
                              type: string
                            valuesKey:
                              description: ValuesKey is the data key where the values.yaml
                                or a specific value can be found at. Defaults to 'values.yaml'.
                                When set, must be a valid Data Key, consisting of
                                alphanumeric characters, '-', '_' or '.'.
                              maxLength: 253
                              pattern: ^[\-._a-zA-Z0-9]+$
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        type: array
                    required:
                    - chart
                    - interval
                    type: object
                  status:
                    default:
                      observedGeneration: -1
                    description: HelmReleaseStatus defines the observed state of a
                      HelmRelease.
                    properties:
                      conditions:
                        description: Conditions holds the conditions for the HelmRelease.
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      failures:
                        description: Failures is the reconciliation failure count
                          against the latest desired state. It is reset after a successful
                          reconciliation.
                        format: int64
                        type: integer
                      helmChart:
                        description: HelmChart is the namespaced name of the HelmChart
                          resource created by the controller for the HelmRelease.
                        type: string
                      installFailures:
                        description: InstallFailures is the install failure count
                          against the latest desired state. It is reset after a successful
                          reconciliation.
                        format: int64
                        type: integer
                      lastAppliedRevision:
                        description: LastAppliedRevision is the revision of the last
                          successfully applied source.
                        type: string
                      lastAttemptedRevision:
                        description: LastAttemptedRevision is the revision of the
                          last reconciliation attempt.
                        type: string
                      lastAttemptedValuesChecksum:
                        description: LastAttemptedValuesChecksum is the SHA1 checksum
                          of the values of the last reconciliation attempt.
                        type: string
                      lastHandledReconcileAt:
                        description: LastHandledReconcileAt holds the value of the
                          most recent reconcile request value, so a change of the
                          annotation value can be detected.
                        type: string
                      lastReleaseRevision:
                        description: LastReleaseRevision is the revision of the last
                          successful Helm release.
                        type: integer
                      observedGeneration:
                        description: ObservedGeneration is the last observed generation.
                        format: int64
                        type: integer
                      upgradeFailures:
                        description: UpgradeFailures is the upgrade failure count
                          against the latest desired state. It is reset after a successful
                          reconciliation.
                        format: int64
                        type: integer
                    type: object
                type: object
            served: true
            storage: true
            subresources:
        status:
          acceptedNames:
            kind: HelmRelease
            listKind: HelmReleaseList
            plural: helmreleases
            shortNames:
            - hr
            singular: helmrelease
          conditions: []
          storedVersions: []
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.8.0
          labels:
            app.kubernetes.io/component: source-controller
            app.kubernetes.io/instance: flux-system
            app.kubernetes.io/part-of: flux
            kustomize.toolkit.fluxcd.io/name: flux-system
            kustomize.toolkit.fluxcd.io/namespace: flux-system
          name: helmrepositories.source.toolkit.fluxcd.io
        spec:
          conversion:
            strategy: None
          group: source.toolkit.fluxcd.io
          names:
            kind: HelmRepository
            listKind: HelmRepositoryList
            plural: helmrepositories
            shortNames:
            - helmrepo
            singular: helmrepository
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .spec.url
              name: URL
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].message
              name: Status
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: HelmRepository is the Schema for the helmrepositories
                  API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: HelmRepositorySpec defines the reference to a Helm
                      repository.
                    properties:
                      accessFrom:
                        description: AccessFrom defines an Access Control List for
                          allowing cross-namespace references to this object.
                        properties:
                          namespaceSelectors:
                            description: NamespaceSelectors is the list of namespace
                              selectors to which this ACL applies. Items in this list
                              are evaluated using a logical OR operation.
                            items:
                              description: NamespaceSelector selects the namespaces
                                to which this ACL applies. An empty map of MatchLabels
                                matches all namespaces in a cluster.
                              properties:
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            type: array
                        required:
                        - namespaceSelectors
                        type: object
                      interval:
                        description: The interval at which to check the upstream for
                          updates.
                        type: string
                      passCredentials:
                        description: PassCredentials allows the credentials from the
                          SecretRef to be passed on to a host that does not match
                          the host as defined in URL. This may be required if the
                          host of the advertised chart URLs in the index differ from
                          the defined URL. Enabling this should be done with caution,
                          as it can potentially result in credentials getting stolen
                          in a MITM-attack.
                        type: boolean
                      secretRef:
                        description: The name of the secret containing authentication
                          credentials for the Helm repository. For HTTP/S basic auth
                          the secret must contain username and password fields. For
                          TLS the secret must contain a certFile and keyFile, and/or
                          caCert fields.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      suspend:
                        description: This flag tells the controller to suspend the
                          reconciliation of this source.
                        type: boolean
                      timeout:
                        default: 60s
                        description: The timeout of index downloading, defaults to
                          60s.
                        type: string
                      url:
                        description: The Helm repository URL, a valid URL contains
                          at least a protocol and host.
                        type: string
                    required:
                    - interval
                    - url
                    type: object
                  status:
                    default:
                      observedGeneration: -1
                    description: HelmRepositoryStatus defines the observed state of
                      the HelmRepository.
                    properties:
                      artifact:
                        description: Artifact represents the output of the last successful
                          repository sync.
                        properties:
                          checksum:
                            description: Checksum is the SHA256 checksum of the artifact.
                            type: string
                          lastUpdateTime:
                            description: LastUpdateTime is the timestamp corresponding
                              to the last update of this artifact.
                            format: date-time
                            type: string
                          path:
                            description: Path is the relative file path of this artifact.
                            type: string
                          revision:
                            description: Revision is a human readable identifier traceable
                              in the origin source system. It can be a Git commit
                              SHA, Git tag, a Helm index timestamp, a Helm chart version,
                              etc.
                            type: string
                          url:
                            description: URL is the HTTP address of this artifact.
                            type: string
                        required:
                        - path
                        - url
                        type: object
                      conditions:
                        description: Conditions holds the conditions for the HelmRepository.
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      lastHandledReconcileAt:
                        description: LastHandledReconcileAt holds the value of the
                          most recent reconcile request value, so a change of the
                          annotation value can be detected.
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the last observed generation.
                        format: int64
                        type: integer
                      url:
                        description: URL is the download link for the last index fetched.
                        type: string
                    type: object
                type: object
            served: true
            storage: false
            subresources:
          - additionalPrinterColumns:
            - jsonPath: .spec.url
              name: URL
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            - jsonPath: .status.conditions[?(@.type=="Ready")].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].message
              name: Status
              type: string
            name: v1beta2
            schema:
              openAPIV3Schema:
                description: HelmRepository is the Schema for the helmrepositories
                  API.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: HelmRepositorySpec specifies the required configuration
                      to produce an Artifact for a Helm repository index YAML.
                    properties:
                      accessFrom:
                        description: 'AccessFrom specifies an Access Control List
                          for allowing cross-namespace references to this object.
                          NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092'
                        properties:
                          namespaceSelectors:
                            description: NamespaceSelectors is the list of namespace
                              selectors to which this ACL applies. Items in this list
                              are evaluated using a logical OR operation.
                            items:
                              description: NamespaceSelector selects the namespaces
                                to which this ACL applies. An empty map of MatchLabels
                                matches all namespaces in a cluster.
                              properties:
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            type: array
                        required:
                        - namespaceSelectors
                        type: object
                      interval:
                        description: Interval at which to check the URL for updates.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                        type: string
                      passCredentials:
                        description: PassCredentials allows the credentials from the
                          SecretRef to be passed on to a host that does not match
                          the host as defined in URL. This may be required if the
                          host of the advertised chart URLs in the index differ from
                          the defined URL. Enabling this should be done with caution,
                          as it can potentially result in credentials getting stolen
                          in a MITM-attack.
                        type: boolean
                      provider:
                        default: generic
                        description: Provider used for authentication, can be 'aws',
                          'azure', 'gcp' or 'generic'. This field is optional, and
                          only taken into account if the .spec.type field is set to
                          'oci'. When not specified, defaults to 'generic'.
                        enum:
                        - generic
                        - aws
                        - azure
                        - gcp
                        type: string
                      secretRef:
                        description: SecretRef specifies the Secret containing authentication
                          credentials for the HelmRepository. For HTTP/S basic auth
                          the secret must contain 'username' and 'password' fields.
                          For TLS the secret must contain a 'certFile' and 'keyFile',
                          and/or 'caCert' fields.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      suspend:
                        description: Suspend tells the controller to suspend the reconciliation
                          of this HelmRepository.
                        type: boolean
                      timeout:
                        default: 60s
                        description: Timeout is used for the index fetch operation
                          for an HTTPS helm repository, and for remote OCI Repository
                          operations like pulling for an OCI helm repository. Its
                          default value is 60s.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                        type: string
                      type:
                        description: Type of the HelmRepository. When this field is
                          set to  "oci", the URL field value must be prefixed with
                          "oci://".
                        enum:
                        - default
                        - oci
                        type: string
                      url:
                        description: URL of the Helm repository, a valid URL contains
                          at least a protocol and host.
                        type: string
                    required:
                    - interval
                    - url
                    type: object
                  status:
                    default:
                      observedGeneration: -1
                    description: HelmRepositoryStatus records the observed state of
                      the HelmRepository.
                    properties:
                      artifact:
                        description: Artifact represents the last successful HelmRepository
                          reconciliation.
                        properties:
                          checksum:
                            description: Checksum is the SHA256 checksum of the Artifact
                              file.
                            type: string
                          lastUpdateTime:
                            description: LastUpdateTime is the timestamp corresponding
                              to the last update of the Artifact.
                            format: date-time
                            type: string
                          metadata:
                            additionalProperties:
                              type: string
                            description: Metadata holds upstream information such
                              as OCI annotations.
                            type: object
                          path:
                            description: Path is the relative file path of the Artifact.
                              It can be used to locate the file in the root of the
                              Artifact storage on the local file system of the controller
                              managing the Source.
                            type: string
                          revision:
                            description: Revision is a human-readable identifier traceable
                              in the origin source system. It can be a Git commit
                              SHA, Git tag, a Helm chart version, etc.
                            type: string
                          size:
                            description: Size is the number of bytes in the file.
                            format: int64
                            type: integer
                          url:
                            description: URL is the HTTP address of the Artifact as
                              exposed by the controller managing the Source. It can
                              be used to retrieve the Artifact for consumption, e.g.
                              by another controller applying the Artifact contents.
                            type: string
                        required:
                        - path
                        - url
                        type: object
                      conditions:
                        description: Conditions holds the conditions for the HelmRepository.
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      lastHandledReconcileAt:
                        description: LastHandledReconcileAt holds the value of the
                          most recent reconcile request value, so a change of the
                          annotation value can be detected.
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the last observed generation
                          of the HelmRepository object.
                        format: int64
                        type: integer
                      url:
                        description: URL is the dynamic fetch link for the latest
                          Artifact. It is provided on a "best effort" basis, and using
                          the precise HelmRepositoryStatus.Artifact data is recommended.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
        status:
          acceptedNames:
            kind: HelmRepository
            listKind: HelmRepositoryList
            plural: helmrepositories
            shortNames:
            - helmrepo
            singular: helmrepository
          conditions: []
          storedVersions: []
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.8.0
          labels:
            app.kubernetes.io/component: image-reflector-controller
            app.kubernetes.io/instance: flux-system
            app.kubernetes.io/part-of: flux
            kustomize.toolkit.fluxcd.io/name: flux-system
            kustomize.toolkit.fluxcd.io/namespace: flux-system
          name: imagepolicies.image.toolkit.fluxcd.io
        spec:
          conversion:
            strategy: None
          group: image.toolkit.fluxcd.io
          names:
            kind: ImagePolicy
            listKind: ImagePolicyList
            plural: imagepolicies
            singular: imagepolicy
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .status.latestImage
              name: LatestImage
              type: string
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: ImagePolicy is the Schema for the imagepolicies API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ImagePolicySpec defines the parameters for calculating
                      the ImagePolicy
                    properties:
                      filterTags:
                        description: FilterTags enables filtering for only a subset
                          of tags based on a set of rules. If no rules are provided,
                          all the tags from the repository will be ordered and compared.
                        properties:
                          extract:
                            description: Extract allows a capture group to be extracted
                              from the specified regular expression pattern, useful
                              before tag evaluation.
                            type: string
                          pattern:
                            description: Pattern specifies a regular expression pattern
                              used to filter for image tags.
                            type: string
                        type: object
                      imageRepositoryRef:
                        description: ImageRepositoryRef points at the object specifying
                          the image being scanned
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                          namespace:
                            description: Namespace of the referent, when not specified
                              it acts as LocalObjectReference.
                            type: string
                        required:
                        - name
                        type: object
                      policy:
                        description: Policy gives the particulars of the policy to
                          be followed in selecting the most recent image
                        properties:
                          alphabetical:
                            description: Alphabetical set of rules to use for alphabetical
                              ordering of the tags.
                            properties:
                              order:
                                default: asc
                                description: Order specifies the sorting order of
                                  the tags. Given the letters of the alphabet as tags,
                                  ascending order would select Z, and descending order
                                  would select A.
                                enum:
                                - asc
                                - desc
                                type: string
                            type: object
                          numerical:
                            description: Numerical set of rules to use for numerical
                              ordering of the tags.
                            properties:
                              order:
                                default: asc
                                description: Order specifies the sorting order of
                                  the tags. Given the integer values from 0 to 9 as
                                  tags, ascending order would select 9, and descending
                                  order would select 0.
                                enum:
                                - asc
                                - desc
                                type: string
                            type: object
                          semver:
                            description: SemVer gives a semantic version range to
                              check against the tags available.
                            properties:
                              range:
                                description: Range gives a semver range for the image
                                  tag; the highest version within the range that's
                                  a tag yields the latest image.
                                type: string
                            required:
                            - range
                            type: object
                        type: object
                    required:
                    - imageRepositoryRef
                    - policy
                    type: object
                  status:
                    default:
                      observedGeneration: -1
                    description: ImagePolicyStatus defines the observed state of ImagePolicy
                    properties:
                      conditions:
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      latestImage:
                        description: LatestImage gives the first in the list of images
                          scanned by the image repository, when filtered and ordered
                          according to the policy.
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                    type: object
                type: object
            served: true
            storage: true
            subresources:
        status:
          acceptedNames:
            kind: ImagePolicy
            listKind: ImagePolicyList
            plural: imagepolicies
            singular: imagepolicy
          conditions: []
          storedVersions: []
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.8.0
          labels:
            app.kubernetes.io/component: image-reflector-controller
            app.kubernetes.io/instance: flux-system
            app.kubernetes.io/part-of: flux
            kustomize.toolkit.fluxcd.io/name: flux-system
            kustomize.toolkit.fluxcd.io/namespace: flux-system
          name: imagerepositories.image.toolkit.fluxcd.io
        spec:
          conversion:
            strategy: None
          group: image.toolkit.fluxcd.io
          names:
            kind: ImageRepository
            listKind: ImageRepositoryList
            plural: imagerepositories
            singular: imagerepository
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .status.lastScanResult.scanTime
              name: Last scan
              type: string
            - jsonPath: .status.lastScanResult.tagCount
              name: Tags
              type: string
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: ImageRepository is the Schema for the imagerepositories
                  API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ImageRepositorySpec defines the parameters for scanning
                      an image repository, e.g., `fluxcd/flux`.
                    properties:
                      accessFrom:
                        description: AccessFrom defines an ACL for allowing cross-namespace
                          references to the ImageRepository object based on the caller's
                          namespace labels.
                        properties:
                          namespaceSelectors:
                            description: NamespaceSelectors is the list of namespace
                              selectors to which this ACL applies. Items in this list
                              are evaluated using a logical OR operation.
                            items:
                              description: NamespaceSelector selects the namespaces
                                to which this ACL applies. An empty map of MatchLabels
                                matches all namespaces in a cluster.
                              properties:
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            type: array
                        required:
                        - namespaceSelectors
                        type: object
                      certSecretRef:
                        description: "CertSecretRef can be given the name of a secret
                          containing either or both of \n - a PEM-encoded client certificate
                          (`certFile`) and private key (`keyFile`); - a PEM-encoded
                          CA certificate (`caFile`) \n and whichever are supplied,
                          will be used for connecting to the registry. The client
                          cert and key are useful if you are authenticating with a
                          certificate; the CA cert is useful if you are using a self-signed
                          server certificate."
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      exclusionList:
                        description: ExclusionList is a list of regex strings used
                          to exclude certain tags from being stored in the database.
                        items:
                          type: string
                        type: array
                      image:
                        description: Image is the name of the image repository
                        type: string
                      interval:
                        description: Interval is the length of time to wait between
                          scans of the image repository.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                        type: string
                      secretRef:
                        description: SecretRef can be given the name of a secret containing
                          credentials to use for the image registry. The secret should
                          be created with `kubectl create secret docker-registry`,
                          or the equivalent.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      serviceAccountName:
                        description: ServiceAccountName is the name of the Kubernetes
                          ServiceAccount used to authenticate the image pull if the
                          service account has attached pull secrets.
                        maxLength: 253
                        type: string
                      suspend:
                        description: This flag tells the controller to suspend subsequent
                          image scans. It does not apply to already started scans.
                          Defaults to false.
                        type: boolean
                      timeout:
                        description: Timeout for image scanning. Defaults to 'Interval'
                          duration.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                        type: string
                    type: object
                  status:
                    default:
                      observedGeneration: -1
                    description: ImageRepositoryStatus defines the observed state
                      of ImageRepository
                    properties:
                      canonicalImageName:
                        description: CanonicalName is the name of the image repository
                          with all the implied bits made explicit; e.g., `docker.io/library/alpine`
                          rather than `alpine`.
                        type: string
                      conditions:
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      lastHandledReconcileAt:
                        description: LastHandledReconcileAt holds the value of the
                          most recent reconcile request value, so a change of the
                          annotation value can be detected.
                        type: string
                      lastScanResult:
                        description: LastScanResult contains the number of fetched
                          tags.
                        properties:
                          scanTime:
                            format: date-time
                            type: string
                          tagCount:
                            type: integer
                        required:
                        - tagCount
                        type: object
                      observedGeneration:
                        description: ObservedGeneration is the last reconciled generation.
                        format: int64
                        type: integer
                    type: object
                type: object
            served: true
            storage: true
            subresources:
        status:
          acceptedNames:
            kind: ImageRepository
            listKind: ImageRepositoryList
            plural: imagerepositories
            singular: imagerepository
          conditions: []
          storedVersions: []
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.8.0
          labels:
            app.kubernetes.io/component: image-automation-controller
            app.kubernetes.io/instance: flux-system
            app.kubernetes.io/part-of: flux
            kustomize.toolkit.fluxcd.io/name: flux-system
            kustomize.toolkit.fluxcd.io/namespace: flux-system
          name: imageupdateautomations.image.toolkit.fluxcd.io
        spec:
          conversion:
            strategy: None
          group: image.toolkit.fluxcd.io
          names:
            kind: ImageUpdateAutomation
            listKind: ImageUpdateAutomationList
            plural: imageupdateautomations
            singular: imageupdateautomation
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .status.lastAutomationRunTime
              name: Last run
              type: string
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: ImageUpdateAutomation is the Schema for the imageupdateautomations
                  API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ImageUpdateAutomationSpec defines the desired state
                      of ImageUpdateAutomation
                    properties:
                      git:
                        description: GitSpec contains all the git-specific definitions.
                          This is technically optional, but in practice mandatory
                          until there are other kinds of source allowed.
                        properties:
                          checkout:
                            description: Checkout gives the parameters for cloning
                              the git repository, ready to make changes. If not present,
                              the `spec.ref` field from the referenced `GitRepository`
                              or its default will be used.
                            properties:
                              ref:
                                description: Reference gives a branch, tag or commit
                                  to clone from the Git repository.
                                properties:
                                  branch:
                                    description: "Branch to check out, defaults to
                                      'master' if no other field is defined. \n When
                                      GitRepositorySpec.GitImplementation is set to
                                      'go-git', a shallow clone of the specified branch
                                      is performed."
                                    type: string
                                  commit:
                                    description: "Commit SHA to check out, takes precedence
                                      over all reference fields. \n When GitRepositorySpec.GitImplementation
                                      is set to 'go-git', this can be combined with
                                      Branch to shallow clone the branch, in which
                                      the commit is expected to exist."
                                    type: string
                                  semver:
                                    description: SemVer tag expression to check out,
                                      takes precedence over Tag.
                                    type: string
                                  tag:
                                    description: Tag to check out, takes precedence
                                      over Branch.
                                    type: string
                                type: object
                            required:
                            - ref
                            type: object
                          commit:
                            description: Commit specifies how to commit to the git
                              repository.
                            properties:
                              author:
                                description: Author gives the email and optionally
                                  the name to use as the author of commits.
                                properties:
                                  email:
                                    description: Email gives the email to provide
                                      when making a commit.
                                    type: string
                                  name:
                                    description: Name gives the name to provide when
                                      making a commit.
                                    type: string
                                required:
                                - email
                                type: object
                              messageTemplate:
                                description: MessageTemplate provides a template for
                                  the commit message, into which will be interpolated
                                  the details of the change made.
                                type: string
                              signingKey:
                                description: SigningKey provides the option to sign
                                  commits with a GPG key
                                properties:
                                  secretRef:
                                    description: SecretRef holds the name to a secret
                                      that contains a 'git.asc' key corresponding
                                      to the ASCII Armored file containing the GPG
                                      signing keypair as the value. It must be in
                                      the same namespace as the ImageUpdateAutomation.
                                    properties:
                                      name:
                                        description: Name of the referent.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                type: object
                            required:
                            - author
                            type: object
                          push:
                            description: Push specifies how and where to push commits
                              made by the automation. If missing, commits are pushed
                              (back) to `.spec.checkout.branch` or its default.
                            properties:
                              branch:
                                description: Branch specifies that commits should
                                  be pushed to the branch named. The branch is created
                                  using `.spec.checkout.branch` as the starting point,
                                  if it doesn't already exist.
                                type: string
                            required:
                            - branch
                            type: object
                        required:
                        - commit
                        type: object
                      interval:
                        description: Interval gives an lower bound for how often the
                          automation run should be attempted.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                        type: string
                      sourceRef:
                        description: SourceRef refers to the resource giving access
                          details to a git repository.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          kind:
                            default: GitRepository
                            description: Kind of the referent.
                            enum:
                            - GitRepository
                            type: string
                          name:
                            description: Name of the referent.
                            type: string
                          namespace:
                            description: Namespace of the referent, defaults to the
                              namespace of the Kubernetes resource object that contains
                              the reference.
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      suspend:
                        description: Suspend tells the controller to not run this
                          automation, until it is unset (or set to false). Defaults
                          to false.
                        type: boolean
                      update:
                        default:
                          strategy: Setters
                        description: Update gives the specification for how to update
                          the files in the repository. This can be left empty, to
                          use the default value.
                        properties:
                          path:
                            description: Path to the directory containing the manifests
                              to be updated. Defaults to 'None', which translates
                              to the root path of the GitRepositoryRef.
                            type: string
                          strategy:
                            default: Setters
                            description: Strategy names the strategy to be used.
                            enum:
                            - Setters
                            type: string
                        required:
                        - strategy
                        type: object
                    required:
                    - interval
                    - sourceRef
                    type: object
                  status:
                    default:
                      observedGeneration: -1
                    description: ImageUpdateAutomationStatus defines the observed
                      state of ImageUpdateAutomation
                    properties:
                      conditions:
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      lastAutomationRunTime:
                        description: LastAutomationRunTime records the last time the
                          controller ran this automation through to completion (even
                          if no updates were made).
                        format: date-time
                        type: string
                      lastHandledReconcileAt:
                        description: LastHandledReconcileAt holds the value of the
                          most recent reconcile request value, so a change of the
                          annotation value can be detected.
                        type: string
                      lastPushCommit:
                        description: LastPushCommit records the SHA1 of the last commit
                          made by the controller, for this automation object
                        type: string
                      lastPushTime:
                        description: LastPushTime records the time of the last pushed
                          change.
                        format: date-time
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                    type: object
                type: object
            served: true
            storage: true
            subresources:
        status:
          acceptedNames:
            kind: ImageUpdateAutomation
            listKind: ImageUpdateAutomationList
            plural: imageupdateautomations
            singular: imageupdateautomation
          conditions: []
          storedVersions: []
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.8.0
          labels:
            app.kubernetes.io/component: kustomize-controller
            app.kubernetes.io/instance: flux-system
            app.kubernetes.io/part-of: flux
            kustomize.toolkit.fluxcd.io/name: flux-system
            kustomize.toolkit.fluxcd.io/namespace: flux-system
          name: kustomizations.kustomize.toolkit.fluxcd.io
        spec:
          conversion:
            strategy: None
          group: kustomize.toolkit.fluxcd.io
          names:
            kind: Kustomization
            listKind: KustomizationList
            plural: kustomizations
            shortNames:
            - ks
            singular: kustomization
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .status.conditions[?(@.type=="Ready")].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].message
              name: Status
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: Kustomization is the Schema for the kustomizations API.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: KustomizationSpec defines the desired state of a
                      kustomization.
                    properties:
                      decryption:
                        description: Decrypt Kubernetes secrets before applying them
                          on the cluster.
                        properties:
                          provider:
                            description: Provider is the name of the decryption engine.
                            enum:
                            - sops
                            type: string
                          secretRef:
                            description: The secret name containing the private OpenPGP
                              keys used for decryption.
                            properties:
                              name:
                                description: Name of the referent.
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - provider
                        type: object
                      dependsOn:
                        description: DependsOn may contain a meta.NamespacedObjectReference
                          slice with references to Kustomization resources that must
                          be ready before this Kustomization can be reconciled.
                        items:
                          description: NamespacedObjectReference contains enough information
                            to locate the referenced Kubernetes resource object in
                            any namespace.
                          properties:
                            name:
                              description: Name of the referent.
                              type: string
                            namespace:
                              description: Namespace of the referent, when not specified
                                it acts as LocalObjectReference.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      force:
                        default: false
                        description: Force instructs the controller to recreate resources
                          when patching fails due to an immutable field change.
                        type: boolean
                      healthChecks:
                        description: A list of resources to be included in the health
                          assessment.
                        items:
                          description: NamespacedObjectKindReference contains enough
                            information to locate the typed referenced Kubernetes
                            resource object in any namespace.
                          properties:
                            apiVersion:
                              description: API version of the referent, if not specified
                                the Kubernetes preferred version will be used.
                              type: string
                            kind:
                              description: Kind of the referent.
                              type: string
                            name:
                              description: Name of the referent.
                              type: string
                            namespace:
                              description: Namespace of the referent, when not specified
                                it acts as LocalObjectReference.
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        type: array
                      images:
                        description: Images is a list of (image name, new name, new
                          tag or digest) for changing image names, tags or digests.
                          This can also be achieved with a patch, but this operator
                          is simpler to specify.
                        items:
                          description: Image contains an image name, a new name, a
                            new tag or digest, which will replace the original name
                            and tag.
                          properties:
                            digest:
                              description: Digest is the value used to replace the
                                original image tag. If digest is present NewTag value
                                is ignored.
                              type: string
                            name:
                              description: Name is a tag-less image name.
                              type: string
                            newName:
                              description: NewName is the value used to replace the
                                original name.
                              type: string
                            newTag:
                              description: NewTag is the value used to replace the
                                original tag.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      interval:
                        description: The interval at which to reconcile the Kustomization.
                        type: string
                      kubeConfig:
                        description: The KubeConfig for reconciling the Kustomization
                          on a remote cluster. When specified, KubeConfig takes precedence
                          over ServiceAccountName.
                        properties:
                          secretRef:
                            description: SecretRef holds the name to a secret that
                              contains a 'value' key with the kubeconfig file as the
                              value. It must be in the same namespace as the Kustomization.
                              It is recommended that the kubeconfig is self-contained,
                              and the secret is regularly updated if credentials such
                              as a cloud-access-token expire. Cloud specific `cmd-path`
                              auth helpers will not function without adding binaries
                              and credentials to the Pod that is responsible for reconciling
                              the Kustomization.
                            properties:
                              name:
                                description: Name of the referent.
                                type: string
                            required:
                            - name
                            type: object
                        type: object
                      patches:
                        description: Strategic merge and JSON patches, defined as
                          inline YAML objects, capable of targeting objects based
                          on kind, label and annotation selectors.
                        items:
                          description: Patch contains an inline StrategicMerge or
                            JSON6902 patch, and the target the patch should be applied
                            to.
                          properties:
                            patch:
                              description: Patch contains an inline StrategicMerge
                                patch or an inline JSON6902 patch with an array of
                                operation objects.
                              type: string
                            target:
                              description: Target points to the resources that the
                                patch document should be applied to.
                              properties:
                                annotationSelector:
                                  description: AnnotationSelector is a string that
                                    follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                    It matches with the resource annotations.
                                  type: string
                                group:
                                  description: Group is the API group to select resources
                                    from. Together with Version and Kind it is capable
                                    of unambiguously identifying and/or selecting
                                    resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                  type: string
                                kind:
                                  description: Kind of the API Group to select resources
                                    from. Together with Group and Version it is capable
                                    of unambiguously identifying and/or selecting
                                    resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                  type: string
                                labelSelector:
                                  description: LabelSelector is a string that follows
                                    the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                    It matches with the resource labels.
                                  type: string
                                name:
                                  description: Name to match resources with.
                                  type: string
                                namespace:
                                  description: Namespace to select resources from.
                                  type: string
                                version:
                                  description: Version of the API Group to select
                                    resources from. Together with Group and Kind it
                                    is capable of unambiguously identifying and/or
                                    selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                  type: string
                              type: object
                          type: object
                        type: array
                      patchesJson6902:
                        description: JSON 6902 patches, defined as inline YAML objects.
                        items:
                          description: JSON6902Patch contains a JSON6902 patch and
                            the target the patch should be applied to.
                          properties:
                            patch:
                              description: Patch contains the JSON6902 patch document
                                with an array of operation objects.
                              items:
                                description: JSON6902 is a JSON6902 operation object.
                                  https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                properties:
                                  from:
                                    description: From contains a JSON-pointer value
                                      that references a location within the target
                                      document where the operation is performed. The
                                      meaning of the value depends on the value of
                                      Op, and is NOT taken into account by all operations.
                                    type: string
                                  op:
                                    description: Op indicates the operation to perform.
                                      Its value MUST be one of "add", "remove", "replace",
                                      "move", "copy", or "test". https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                    enum:
                                    - test
                                    - remove
                                    - add
                                    - replace
                                    - move
                                    - copy
                                    type: string
                                  path:
                                    description: Path contains the JSON-pointer value
                                      that references a location within the target
                                      document where the operation is performed. The
                                      meaning of the value depends on the value of
                                      Op.
                                    type: string
                                  value:
                                    description: Value contains a valid JSON structure.
                                      The meaning of the value depends on the value
                                      of Op, and is NOT taken into account by all
                                      operations.
                                    x-kubernetes-preserve-unknown-fields: true
                                required:
                                - op
                                - path
                                type: object
                              type: array
                            target:
                              description: Target points to the resources that the
                                patch document should be applied to.
                              properties:
                                annotationSelector:
                                  description: AnnotationSelector is a string that
                                    follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                    It matches with the resource annotations.
                                  type: string
                                group:
                                  description: Group is the API group to select resources
                                    from. Together with Version and Kind it is capable
                                    of unambiguously identifying and/or selecting
                                    resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                  type: string
                                kind:
                                  description: Kind of the API Group to select resources
                                    from. Together with Group and Version it is capable
                                    of unambiguously identifying and/or selecting
                                    resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                  type: string
                                labelSelector:
                                  description: LabelSelector is a string that follows
                                    the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                    It matches with the resource labels.
                                  type: string
                                name:
                                  description: Name to match resources with.
                                  type: string
                                namespace:
                                  description: Namespace to select resources from.
                                  type: string
                                version:
                                  description: Version of the API Group to select
                                    resources from. Together with Group and Kind it
                                    is capable of unambiguously identifying and/or
                                    selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                  type: string
                              type: object
                          required:
                          - patch
                          - target
                          type: object
                        type: array
                      patchesStrategicMerge:
                        description: Strategic merge patches, defined as inline YAML
                          objects.
                        items:
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                      path:
                        description: Path to the directory containing the kustomization.yaml
                          file, or the set of plain YAMLs a kustomization.yaml should
                          be generated for. Defaults to 'None', which translates to
                          the root path of the SourceRef.
                        type: string
                      postBuild:
                        description: PostBuild describes which actions to perform
                          on the YAML manifest generated by building the kustomize
                          overlay.
                        properties:
                          substitute:
                            additionalProperties:
                              type: string
                            description: Substitute holds a map of key/value pairs.
                              The variables defined in your YAML manifests that match
                              any of the keys defined in the map will be substituted
                              with the set value. Includes support for bash string
                              replacement functions e.g. ${var:=default}, ${var:position}
                              and ${var/substring/replacement}.
                            type: object
                          substituteFrom:
                            description: SubstituteFrom holds references to ConfigMaps
                              and Secrets containing the variables and their values
                              to be substituted in the YAML manifests. The ConfigMap
                              and the Secret data keys represent the var names and
                              they must match the vars declared in the manifests for
                              the substitution to happen.
                            items:
                              description: SubstituteReference contains a reference
                                to a resource containing the variables name and value.
                              properties:
                                kind:
                                  description: Kind of the values referent, valid
                                    values are ('Secret', 'ConfigMap').
                                  enum:
                                  - Secret
                                  - ConfigMap
                                  type: string
                                name:
                                  description: Name of the values referent. Should
                                    reside in the same namespace as the referring
                                    resource.
                                  maxLength: 253
                                  minLength: 1
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            type: array
                        type: object
                      prune:
                        description: Prune enables garbage collection.
                        type: boolean
                      retryInterval:
                        description: The interval at which to retry a previously failed
                          reconciliation. When not specified, the controller uses
                          the KustomizationSpec.Interval value to retry failures.
                        type: string
                      serviceAccountName:
                        description: The name of the Kubernetes service account to
                          impersonate when reconciling this Kustomization.
                        type: string
                      sourceRef:
                        description: Reference of the source where the kustomization
                          file is.
                        properties:
                          apiVersion:
                            description: API version of the referent
                            type: string
                          kind:
                            description: Kind of the referent
                            enum:
                            - GitRepository
                            - Bucket
                            type: string
                          name:
                            description: Name of the referent
                            type: string
                          namespace:
                            description: Namespace of the referent, defaults to the
                              Kustomization namespace
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      suspend:
                        description: This flag tells the controller to suspend subsequent
                          kustomize executions, it does not apply to already started
                          executions. Defaults to false.
                        type: boolean
                      targetNamespace:
                        description: TargetNamespace sets or overrides the namespace
                          in the kustomization.yaml file.
                        maxLength: 63
                        minLength: 1
                        type: string
                      timeout:
                        description: Timeout for validation, apply and health checking
                          operations. Defaults to 'Interval' duration.
                        type: string
                      validation:
                        description: Validate the Kubernetes objects before applying
                          them on the cluster. The validation strategy can be 'client'
                          (local dry-run), 'server' (APIServer dry-run) or 'none'.
                          When 'Force' is 'true', validation will fallback to 'client'
                          if set to 'server' because server-side validation is not
                          supported in this scenario.
                        enum:
                        - none
                        - client
                        - server
                        type: string
                    required:
                    - interval
                    - prune
                    - sourceRef
                    type: object
                  status:
                    default:
                      observedGeneration: -1
                    description: KustomizationStatus defines the observed state of
                      a kustomization.
                    properties:
                      conditions:
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      lastAppliedRevision:
                        description: The last successfully applied revision. The revision
                          format for Git sources is <branch|tag>/<commit-sha>.
                        type: string
                      lastAttemptedRevision:
                        description: LastAttemptedRevision is the revision of the
                          last reconciliation attempt.
                        type: string
                      lastHandledReconcileAt:
                        description: LastHandledReconcileAt holds the value of the
                          most recent reconcile request value, so a change of the
                          annotation value can be detected.
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the last reconciled generation.
                        format: int64
                        type: integer
                      snapshot:
                        description: The last successfully applied revision metadata.
                        properties:
                          checksum:
                            description: The manifests sha1 checksum.
                            type: string
                          entries:
                            description: A list of Kubernetes kinds grouped by namespace.
                            items:
                              description: Snapshot holds the metadata of namespaced
                                Kubernetes objects
                              properties:
                                kinds:
                                  additionalProperties:
                                    type: string
                                  description: The list of Kubernetes kinds.
                                  type: object
                                namespace:
                                  description: The namespace of this entry.
                                  type: string
                              required:
                              - kinds
                              type: object
                            type: array
                        required:
                        - checksum
                        - entries
                        type: object
                    type: object
                type: object
            served: true
            storage: false
            subresources:
          - additionalPrinterColumns:
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            - jsonPath: .status.conditions[?(@.type=="Ready")].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].message
              name: Status
              type: string
            name: v1beta2
            schema:
              openAPIV3Schema:
                description: Kustomization is the Schema for the kustomizations API.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: KustomizationSpec defines the configuration to calculate
                      the desired state from a Source using Kustomize.
                    properties:
                      components:
                        description: Components specifies relative paths to specifications
                          of other Components
                        items:
                          type: string
                        type: array
                      decryption:
                        description: Decrypt Kubernetes secrets before applying them
                          on the cluster.
                        properties:
                          provider:
                            description: Provider is the name of the decryption engine.
                            enum:
                            - sops
                            type: string
                          secretRef:
                            description: The secret name containing the private OpenPGP
                              keys used for decryption.
                            properties:
                              name:
                                description: Name of the referent.
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - provider
                        type: object
                      dependsOn:
                        description: DependsOn may contain a meta.NamespacedObjectReference
                          slice with references to Kustomization resources that must
                          be ready before this Kustomization can be reconciled.
                        items:
                          description: NamespacedObjectReference contains enough information
                            to locate the referenced Kubernetes resource object in
                            any namespace.
                          properties:
                            name:
                              description: Name of the referent.
                              type: string
                            namespace:
                              description: Namespace of the referent, when not specified
                                it acts as LocalObjectReference.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      force:
                        default: false
                        description: Force instructs the controller to recreate resources
                          when patching fails due to an immutable field change.
                        type: boolean
                      healthChecks:
                        description: A list of resources to be included in the health
                          assessment.
                        items:
                          description: NamespacedObjectKindReference contains enough
                            information to locate the typed referenced Kubernetes
                            resource object in any namespace.
                          properties:
                            apiVersion:
                              description: API version of the referent, if not specified
                                the Kubernetes preferred version will be used.
                              type: string
                            kind:
                              description: Kind of the referent.
                              type: string
                            name:
                              description: Name of the referent.
                              type: string
                            namespace:
                              description: Namespace of the referent, when not specified
                                it acts as LocalObjectReference.
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        type: array
                      images:
                        description: Images is a list of (image name, new name, new
                          tag or digest) for changing image names, tags or digests.
                          This can also be achieved with a patch, but this operator
                          is simpler to specify.
                        items:
                          description: Image contains an image name, a new name, a
                            new tag or digest, which will replace the original name
                            and tag.
                          properties:
                            digest:
                              description: Digest is the value used to replace the
                                original image tag. If digest is present NewTag value
                                is ignored.
                              type: string
                            name:
                              description: Name is a tag-less image name.
                              type: string
                            newName:
                              description: NewName is the value used to replace the
                                original name.
                              type: string
                            newTag:
                              description: NewTag is the value used to replace the
                                original tag.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      interval:
                        description: The interval at which to reconcile the Kustomization.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                        type: string
                      kubeConfig:
                        description: The KubeConfig for reconciling the Kustomization
                          on a remote cluster. When used in combination with KustomizationSpec.ServiceAccountName,
                          forces the controller to act on behalf of that Service Account
                          at the target cluster. If the --default-service-account
                          flag is set, its value will be used as a controller level
                          fallback for when KustomizationSpec.ServiceAccountName is
                          empty.
                        properties:
                          secretRef:
                            description: SecretRef holds the name of a secret that
                              contains a key with the kubeconfig file as the value.
                              If no key is set, the key will default to 'value'. It
                              is recommended that the kubeconfig is self-contained,
                              and the secret is regularly updated if credentials such
                              as a cloud-access-token expire. Cloud specific `cmd-path`
                              auth helpers will not function without adding binaries
                              and credentials to the Pod that is responsible for reconciling
                              Kubernetes resources.
                            properties:
                              key:
                                description: Key in the Secret, when not specified
                                  an implementation-specific default key is used.
                                type: string
                              name:
                                description: Name of the Secret.
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - secretRef
                        type: object
                      patches:
                        description: Strategic merge and JSON patches, defined as
                          inline YAML objects, capable of targeting objects based
                          on kind, label and annotation selectors.
                        items:
                          description: Patch contains an inline StrategicMerge or
                            JSON6902 patch, and the target the patch should be applied
                            to.
                          properties:
                            patch:
                              description: Patch contains an inline StrategicMerge
                                patch or an inline JSON6902 patch with an array of
                                operation objects.
                              type: string
                            target:
                              description: Target points to the resources that the
                                patch document should be applied to.
                              properties:
                                annotationSelector:
                                  description: AnnotationSelector is a string that
                                    follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                    It matches with the resource annotations.
                                  type: string
                                group:
                                  description: Group is the API group to select resources
                                    from. Together with Version and Kind it is capable
                                    of unambiguously identifying and/or selecting
                                    resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                  type: string
                                kind:
                                  description: Kind of the API Group to select resources
                                    from. Together with Group and Version it is capable
                                    of unambiguously identifying and/or selecting
                                    resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                  type: string
                                labelSelector:
                                  description: LabelSelector is a string that follows
                                    the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                    It matches with the resource labels.
                                  type: string
                                name:
                                  description: Name to match resources with.
                                  type: string
                                namespace:
                                  description: Namespace to select resources from.
                                  type: string
                                version:
                                  description: Version of the API Group to select
                                    resources from. Together with Group and Kind it
                                    is capable of unambiguously identifying and/or
                                    selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                  type: string
                              type: object
                          type: object
                        type: array
                      patchesJson6902:
                        description: 'JSON 6902 patches, defined as inline YAML objects.
                          Deprecated: Use Patches instead.'
                        items:
                          description: JSON6902Patch contains a JSON6902 patch and
                            the target the patch should be applied to.
                          properties:
                            patch:
                              description: Patch contains the JSON6902 patch document
                                with an array of operation objects.
                              items:
                                description: JSON6902 is a JSON6902 operation object.
                                  https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                properties:
                                  from:
                                    description: From contains a JSON-pointer value
                                      that references a location within the target
                                      document where the operation is performed. The
                                      meaning of the value depends on the value of
                                      Op, and is NOT taken into account by all operations.
                                    type: string
                                  op:
                                    description: Op indicates the operation to perform.
                                      Its value MUST be one of "add", "remove", "replace",
                                      "move", "copy", or "test". https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                    enum:
                                    - test
                                    - remove
                                    - add
                                    - replace
                                    - move
                                    - copy
                                    type: string
                                  path:
                                    description: Path contains the JSON-pointer value
                                      that references a location within the target
                                      document where the operation is performed. The
                                      meaning of the value depends on the value of
                                      Op.
                                    type: string
                                  value:
                                    description: Value contains a valid JSON structure.
                                      The meaning of the value depends on the value
                                      of Op, and is NOT taken into account by all
                                      operations.
                                    x-kubernetes-preserve-unknown-fields: true
                                required:
                                - op
                                - path
                                type: object
                              type: array
                            target:
                              description: Target points to the resources that the
                                patch document should be applied to.
                              properties:
                                annotationSelector:
                                  description: AnnotationSelector is a string that
                                    follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                    It matches with the resource annotations.
                                  type: string
                                group:
                                  description: Group is the API group to select resources
                                    from. Together with Version and Kind it is capable
                                    of unambiguously identifying and/or selecting
                                    resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                  type: string
                                kind:
                                  description: Kind of the API Group to select resources
                                    from. Together with Group and Version it is capable
                                    of unambiguously identifying and/or selecting
                                    resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                  type: string
                                labelSelector:
                                  description: LabelSelector is a string that follows
                                    the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                    It matches with the resource labels.
                                  type: string
                                name:
                                  description: Name to match resources with.
                                  type: string
                                namespace:
                                  description: Namespace to select resources from.
                                  type: string
                                version:
                                  description: Version of the API Group to select
                                    resources from. Together with Group and Kind it
                                    is capable of unambiguously identifying and/or
                                    selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                  type: string
                              type: object
                          required:
                          - patch
                          - target
                          type: object
                        type: array
                      patchesStrategicMerge:
                        description: 'Strategic merge patches, defined as inline YAML
                          objects. Deprecated: Use Patches instead.'
                        items:
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                      path:
                        description: Path to the directory containing the kustomization.yaml
                          file, or the set of plain YAMLs a kustomization.yaml should
                          be generated for. Defaults to 'None', which translates to
                          the root path of the SourceRef.
                        type: string
                      postBuild:
                        description: PostBuild describes which actions to perform
                          on the YAML manifest generated by building the kustomize
                          overlay.
                        properties:
                          substitute:
                            additionalProperties:
                              type: string
                            description: Substitute holds a map of key/value pairs.
                              The variables defined in your YAML manifests that match
                              any of the keys defined in the map will be substituted
                              with the set value. Includes support for bash string
                              replacement functions e.g. ${var:=default}, ${var:position}
                              and ${var/substring/replacement}.
                            type: object
                          substituteFrom:
                            description: SubstituteFrom holds references to ConfigMaps
                              and Secrets containing the variables and their values
                              to be substituted in the YAML manifests. The ConfigMap
                              and the Secret data keys represent the var names and
                              they must match the vars declared in the manifests for
                              the substitution to happen.
                            items:
                              description: SubstituteReference contains a reference
                                to a resource containing the variables name and value.
                              properties:
                                kind:
                                  description: Kind of the values referent, valid
                                    values are ('Secret', 'ConfigMap').
                                  enum:
                                  - Secret
                                  - ConfigMap
                                  type: string
                                name:
                                  description: Name of the values referent. Should
                                    reside in the same namespace as the referring
                                    resource.
                                  maxLength: 253
                                  minLength: 1
                                  type: string
                                optional:
                                  default: false
                                  description: Optional indicates whether the referenced
                                    resource must exist, or whether to tolerate its
                                    absence. If true and the referenced resource is
                                    absent, proceed as if the resource was present
                                    but empty, without any variables defined.
                                  type: boolean
                              required:
                              - kind
                              - name
                              type: object
                            type: array
                        type: object
                      prune:
                        description: Prune enables garbage collection.
                        type: boolean
                      retryInterval:
                        description: The interval at which to retry a previously failed
                          reconciliation. When not specified, the controller uses
                          the KustomizationSpec.Interval value to retry failures.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                        type: string
                      serviceAccountName:
                        description: The name of the Kubernetes service account to
                          impersonate when reconciling this Kustomization.
                        type: string
                      sourceRef:
                        description: Reference of the source where the kustomization
                          file is.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          kind:
                            description: Kind of the referent.
                            enum:
                            - OCIRepository
                            - GitRepository
                            - Bucket
                            type: string
                          name:
                            description: Name of the referent.
                            type: string
                          namespace:
                            description: Namespace of the referent, defaults to the
                              namespace of the Kubernetes resource object that contains
                              the reference.
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      suspend:
                        description: This flag tells the controller to suspend subsequent
                          kustomize executions, it does not apply to already started
                          executions. Defaults to false.
                        type: boolean
                      targetNamespace:
                        description: TargetNamespace sets or overrides the namespace
                          in the kustomization.yaml file.
                        maxLength: 63
                        minLength: 1
                        type: string
                      timeout:
                        description: Timeout for validation, apply and health checking
                          operations. Defaults to 'Interval' duration.
                        pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                        type: string
                      validation:
                        description: 'Deprecated: Not used in v1beta2.'
                        enum:
                        - none
                        - client
                        - server
                        type: string
                      wait:
                        description: Wait instructs the controller to check the health
                          of all the reconciled resources. When enabled, the HealthChecks
                          are ignored. Defaults to false.
                        type: boolean
                    required:
                    - interval
                    - prune
                    - sourceRef
                    type: object
                  status:
                    default:
                      observedGeneration: -1
                    description: KustomizationStatus defines the observed state of
                      a kustomization.
                    properties:
                      conditions:
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n type FooStatus struct{
                            // Represents the observations of a foo's current state.
                            // Known .status.conditions.type are: \"Available\", \"Progressing\",
                            and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                            // +listType=map // +listMapKey=type Conditions []metav1.Condition
                            `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      inventory:
                        description: Inventory contains the list of Kubernetes resource
                          object references that have been successfully applied.
                        properties:
                          entries:
                            description: Entries of Kubernetes resource object references.
                            items:
                              description: ResourceRef contains the information necessary
                                to locate a resource within a cluster.
                              properties:
                                id:
                                  description: ID is the string representation of
                                    the Kubernetes resource object's metadata, in
                                    the format '<namespace>_<name>_<group>_<kind>'.
                                  type: string
                                v:
                                  description: Version is the API version of the Kubernetes
                                    resource object's kind.
                                  type: string
                              required:
                              - id
                              - v
                              type: object
                            type: array
                        required:
                        - entries
                        type: object
                      lastAppliedRevision:
                        description: The last successfully applied revision. The revision
                          format for Git sources is <branch|tag>/<commit-sha>.
                        type: string
                      lastAttemptedRevision:
                        description: LastAttemptedRevision is the revision of the
                          last reconciliation attempt.
                        type: string
                      lastHandledReconcileAt:
                        description: LastHandledReconcileAt holds the value of the
                          most recent reconcile request value, so a change of the
                          annotation value can be detected.
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the last reconciled generation.
                        format: int64
                        type: integer
                    type: object
                type: object
            served: true
            storage: true
            subresources:
        status:
          acceptedNames:
            kind: Kustomization
            listKind: KustomizationList
            plural: kustomizations
            shortNames:
            - ks
            singular: kustomization
          conditions: []
          storedVersions: []
    type: k8s-objects
  - dependsOn:
    - fluxcd-ns
    name: fluxcd-helm-controller
    properties:
      env:
      - name: RUNTIME_NAMESPACE
        value: flux-system
      image: fluxcd/helm-controller:v0.28.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        httpGet:
          path: /healthz
          port: 9440
        timeoutSeconds: 5
      ports:
      - expose: false
        name: http-prom
        port: 8080
        protocol: TCP
      readinessProbe:
        httpGet:
          path: /readyz
          port: 9440
        timeoutSeconds: 5
      volumeMounts:
        emptyDir:
        - mountPath: /tmp
          name: temp
    traits:
    - properties:
        create: true
        name: sa-helm-controller
        privileges:
        - apiGroups:
          - source.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - helm.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - image.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          - secrets
          - configmaps
          - serviceaccounts
          scope: cluster
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          scope: cluster
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - configmaps
          scope: cluster
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps/status
          scope: cluster
          verbs:
          - get
          - update
          - patch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          scope: cluster
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
      type: service-account
    - properties:
        app: helm-controller
        control-plane: controller
      type: labels
    - properties:
        args:
        - --watch-all-namespaces
        - --log-level=debug
        - --log-encoding=json
      type: command
    type: webservice
  - dependsOn:
    - fluxcd-ns
    name: fluxcd-source-controller
    properties:
      env:
      - name: RUNTIME_NAMESPACE
        value: flux-system
      exposeType: ClusterIP
      image: fluxcd/source-controller:v0.33.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        httpGet:
          path: /healthz
          port: 9440
        timeoutSeconds: 5
      ports:
      - expose: true
        name: http
        port: 9090
        protocol: TCP
      - expose: false
        name: http-prom
        port: 8080
        protocol: TCP
      readinessProbe:
        httpGet:
          path: /
          port: 9090
        timeoutSeconds: 5
      volumeMounts:
        emptyDir:
        - mountPath: /tmp
          name: temp
        - mountPath: /data
          name: data
    traits:
    - properties:
        create: true
        name: sa-source-controller
        privileges:
        - apiGroups:
          - source.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - helm.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - image.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          - secrets
          - configmaps
          - serviceaccounts
          scope: cluster
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          scope: cluster
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - configmaps
          scope: cluster
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps/status
          scope: cluster
          verbs:
          - get
          - update
          - patch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          scope: cluster
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
      type: service-account
    - properties:
        app: source-controller
        control-plane: controller
      type: labels
    - properties:
        args:
        - --watch-all-namespaces
        - --log-level=debug
        - --log-encoding=json
        - --storage-path=/data
        - --storage-adv-addr=http://fluxcd-source-controller.flux-system.svc:9090
      type: command
    type: webservice
  - dependsOn:
    - fluxcd-ns
    name: fluxcd-image-automation-controller
    properties:
      env:
      - name: RUNTIME_NAMESPACE
        value: flux-system
      image: fluxcd/image-automation-controller:v0.28.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        httpGet:
          path: /healthz
          port: 9440
        timeoutSeconds: 5
      ports:
      - expose: false
        name: http-prom
        port: 8080
        protocol: TCP
      readinessProbe:
        httpGet:
          path: /readyz
          port: 9440
        timeoutSeconds: 5
      volumeMounts:
        emptyDir:
        - mountPath: /tmp
          name: temp
    traits:
    - properties:
        create: true
        name: sa-image-automation-controller
        privileges:
        - apiGroups:
          - source.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - helm.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - image.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          - secrets
          - configmaps
          - serviceaccounts
          scope: cluster
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          scope: cluster
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - configmaps
          scope: cluster
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps/status
          scope: cluster
          verbs:
          - get
          - update
          - patch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          scope: cluster
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
      type: service-account
    - properties:
        app: image-automation-controller
        control-plane: controller
      type: labels
    - properties:
        args:
        - --watch-all-namespaces
        - --log-level=debug
        - --log-encoding=json
      type: command
    type: webservice
  - dependsOn:
    - fluxcd-ns
    name: fluxcd-image-reflector-controller
    properties:
      env:
      - name: RUNTIME_NAMESPACE
        value: flux-system
      image: fluxcd/image-reflector-controller:v0.23.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        httpGet:
          path: /healthz
          port: 9440
        timeoutSeconds: 5
      ports:
      - expose: false
        name: http-prom
        port: 8080
        protocol: TCP
      readinessProbe:
        httpGet:
          path: /readyz
          port: 9440
        timeoutSeconds: 5
      volumeMounts:
        emptyDir:
        - mountPath: /tmp
          name: temp
        - mountPath: /data
          name: data
    traits:
    - properties:
        create: true
        name: sa-image-reflector-controller
        privileges:
        - apiGroups:
          - source.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - helm.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - image.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          - secrets
          - configmaps
          - serviceaccounts
          scope: cluster
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          scope: cluster
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - configmaps
          scope: cluster
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps/status
          scope: cluster
          verbs:
          - get
          - update
          - patch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          scope: cluster
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
      type: service-account
    - properties:
        app: image-reflector-controller
        control-plane: controller
      type: labels
    - properties:
        args:
        - --watch-all-namespaces
        - --log-level=debug
        - --log-encoding=json
      type: command
    type: webservice
  - dependsOn:
    - fluxcd-ns
    name: fluxcd-kustomize-controller
    properties:
      env:
      - name: RUNTIME_NAMESPACE
        value: flux-system
      image: fluxcd/kustomize-controller:v0.32.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        httpGet:
          path: /healthz
          port: 9440
        timeoutSeconds: 5
      ports:
      - expose: false
        name: http-prom
        port: 8080
        protocol: TCP
      readinessProbe:
        httpGet:
          path: /readyz
          port: 9440
        timeoutSeconds: 5
      volumeMounts:
        emptyDir:
        - mountPath: /tmp
          name: temp
    traits:
    - properties:
        create: true
        name: sa-kustomize-controller
        privileges:
        - apiGroups:
          - source.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - helm.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - image.toolkit.fluxcd.io
          resources:
          - '*'
          scope: cluster
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          - secrets
          - configmaps
          - serviceaccounts
          scope: cluster
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          scope: cluster
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - configmaps
          scope: cluster
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps/status
          scope: cluster
          verbs:
          - get
          - update
          - patch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          scope: cluster
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
      type: service-account
    - properties:
        app: kustomize-controller
        control-plane: controller
      type: labels
    - properties:
        args:
        - --watch-all-namespaces
        - --log-level=debug
        - --log-encoding=json
      type: command
    type: webservice
  policies:
  - name: shared-CRD-namespace
    properties:
      rules:
      - selector:
          resourceTypes:
          - CustomResourceDefinition
          - Namespace
    type: shared-resource
  - name: take-over-CRD-namespace
    properties:
      rules:
      - selector:
          resourceTypes:
          - CustomResourceDefinition
          - Namespace
    type: take-over
  - name: deploy-fluxcd
    properties:
      clusterLabelSelector: {}
      namespace: flux-system
    type: topology
  - name: not-gc-CRD-namespace
    properties:
      rules:
      - selector:
          resourceTypes:
          - CustomResourceDefinition
          - Namespace
        strategy: never
    type: garbage-collect
  - name: not-keep-CRD
    properties:
      rules:
      - selector:
          resourceTypes:
          - CustomResourceDefinition
        strategy:
          path:
          - '*'
    type: apply-once
---
apiVersion: core.oam.dev/v1beta1
kind: TraitDefinition
metadata:
  annotations:
    addon.oam.dev/ignore-without-component: fluxcd-kustomize-controller
    definition.oam.dev/description: A list of StrategicMerge or JSON6902 patch to
      selected target
  labels:
    custom.definition.oam.dev/ui-hidden: "true"
  name: kustomize-patch
  namespace: vela-system
spec:
  podDisruptive: false
  schematic:
    cue:
      template: "patch: spec: patches: parameter.patches\nparameter: {\n\t// +usage=a
        list of StrategicMerge or JSON6902 patch to selected target\n\tpatches: [...#patchItem]\n}\n//
        +usage=Contains a strategicMerge or JSON6902 patch\n#patchItem: {\n\t// +usage=Inline
        patch string, in yaml style\n\tpatch: string\n\t// +usage=Specify the target
        the patch should be applied to\n\ttarget: #selector\n}\n\n// +usage=Selector
        specifies a set of resources\n#selector: {\n\tgroup?:              string\n\tversion?:
        \           string\n\tkind?:               string\n\tnamespace?:          string\n\tname?:
        \              string\n\tannotationSelector?: string\n\tlabelSelector?:      string\n}\n"
---
apiVersion: core.oam.dev/v1beta1
kind: TraitDefinition
metadata:
  annotations:
    definition.oam.dev/description: Patch labels of Pods created by workloads defined
      in Helm Charts.
  labels:
    custom.definition.oam.dev/ui-hidden: "true"
  name: helm-labels
  namespace: vela-system
spec:
  appliesToWorkloads:
  - HelmRelease.helm.toolkit.fluxcd.io
  podDisruptive: false
  schematic:
    cue:
      template: "patch: spec: postRenderers: [{\n\tkustomize: patchesStrategicMerge:
        [{\n\t\tapiVersion: parameter.apiVersion\n\t\tkind:       parameter.kind\n\t\tmetadata:
        {\n\t\t\tname:      parameter.name\n\t\t\tnamespace: parameter.namespace\n\t\t}\n\t\tspec:
        template: metadata: labels: {\n\t\t\t\"app.oam.dev/component\": context.name\n\t\t\t\"app.oam.dev/name\":
        \     context.appName\n\t\t\tfor k, v in parameter.labels {\n\t\t\t\t(k):
        v\n\t\t\t}\n\t\t}\n\t}]\n}]\nparameter: {\n\tapiVersion: *\"apps/v1\" | string\n\tkind:
        \      *\"Deployment\" | string\n\tname:       *context.name | string\n\tnamespace:
        \ *context.namespace | string\n\tlabels?: [string]: string\n}\n"
---
apiVersion: core.oam.dev/v1beta1
kind: TraitDefinition
metadata:
  annotations:
    addon.oam.dev/ignore-without-component: fluxcd-kustomize-controller
    definition.oam.dev/description: A list of strategic merge to kustomize config
  labels:
    custom.definition.oam.dev/ui-hidden: "true"
  name: kustomize-strategy-merge
  namespace: vela-system
spec:
  podDisruptive: false
  schematic:
    cue:
      template: "patch: spec: patches: parameter.patchesStrategicMerge\nparameter:
        {\n\t// +usage=a list of strategicmerge, defined as inline yaml objects.\n\tpatchesStrategicMerge:
        [...#nestedmap]\n}\n#nestedmap: {\n\t...\n}\n"
---
apiVersion: core.oam.dev/v1beta1
kind: ComponentDefinition
metadata:
  annotations:
    addon.oam.dev/ignore-without-component: fluxcd-kustomize-controller
    definition.oam.dev/description: kustomize can fetching, building, updating and
      applying Kustomize manifests from Git repo or Bucket or OCI repo.
  labels: {}
  name: kustomize
  namespace: vela-system
spec:
  schematic:
    cue:
      template: "output: {\n\tapiVersion: \"kustomize.toolkit.fluxcd.io/v1beta2\"\n\tkind:
        \      \"Kustomization\"\n\tmetadata: {\n\t\tname:      context.name\n\t\tnamespace:
        context.namespace\n\t}\n\tspec: {\n\t\tinterval: parameter.pullInterval\n\t\tsourceRef:
        {\n\t\t\tif parameter.repoType == \"git\" {\n\t\t\t\tkind: \"GitRepository\"\n\t\t\t}\n\t\t\tif
        parameter.repoType == \"oss\" {\n\t\t\t\tkind: \"Bucket\"\n\t\t\t}\n\t\t\tif
        parameter.repoType == \"oci\" {\n\t\t\t\tkind: \"OCIRepository\"\n\t\t\t}\n\t\t\tif
        parameter.sourceName == _|_ {\n\t\t\t\tname: context.name\n\t\t\t}\n\t\t\tif
        parameter.sourceName != _|_ {\n\t\t\t\tname: parameter.sourceName\n\t\t\t}\n\t\t\tnamespace:
        context.namespace\n\t\t}\n\t\tpath:    parameter.path\n\t\tsuspend: parameter.suspend\n\t\tprune:
        \  parameter.prune\n\t\tforce:   parameter.force\n\t\tif parameter.targetNamespace
        != _|_ {\n\t\t\ttargetNamespace: parameter.targetNamespace\n\t\t}\n\t}\n}\noutputs:
        {\n\tif parameter.sourceName == _|_ {\n\t\trepo: {\n\t\t\tapiVersion: \"source.toolkit.fluxcd.io/v1beta2\"\n\t\t\tmetadata:
        {\n\t\t\t\tname:      context.name\n\t\t\t\tnamespace: context.namespace\n\t\t\t}\n\t\t\tif
        parameter.repoType == \"git\" {\n\t\t\t\tkind: \"GitRepository\"\n\t\t\t\tspec:
        {\n\t\t\t\t\turl: parameter.url\n\t\t\t\t\tif parameter.git.branch != _|_
        {\n\t\t\t\t\t\tref: branch: parameter.git.branch\n\t\t\t\t\t}\n\t\t\t\t\tif
        parameter.git.provider != _|_ {\n\t\t\t\t\t\tif parameter.git.provider ==
        \"GitHub\" {\n\t\t\t\t\t\t\tgitImplementation: \"go-git\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif
        parameter.git.provider == \"AzureDevOps\" {\n\t\t\t\t\t\t\tgitImplementation:
        \"libgit2\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_secret\n\t\t\t\t\t_sourceCommonArgs\n\t\t\t\t}\n\t\t\t}\n\t\t\tif
        parameter.repoType == \"oss\" {\n\t\t\t\tkind: \"Bucket\"\n\t\t\t\tspec: {\n\t\t\t\t\tendpoint:
        \  parameter.url\n\t\t\t\t\tbucketName: parameter.oss.bucketName\n\t\t\t\t\tprovider:
        \  parameter.oss.provider\n\t\t\t\t\tif parameter.oss.region != _|_ {\n\t\t\t\t\t\tregion:
        parameter.oss.region\n\t\t\t\t\t}\n\t\t\t\t\t_secret\n\t\t\t\t\t_sourceCommonArgs\n\t\t\t\t}\n\t\t\t}\n\t\t\tif
        parameter.repoType == \"oci\" {\n\t\t\t\tkind: \"OCIRepository\"\n\t\t\t\tspec:
        {\n\t\t\t\t\turl: parameter.url\n\t\t\t\t\tif parameter.oci.provider != _|_
        {\n\t\t\t\t\t\tprovider: parameter.oci.provider\n\t\t\t\t\t}\n\t\t\t\t\tif
        parameter.oci.tag != _|_ {\n\t\t\t\t\t\tref: tag: parameter.oci.tag\n\t\t\t\t\t}\n\t\t\t\t\t_secret\n\t\t\t\t\t_sourceCommonArgs\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif
        parameter.imageRepository != _|_ {\n\t\timageRepo: {\n\t\t\tapiVersion: \"image.toolkit.fluxcd.io/v1beta1\"\n\t\t\tkind:
        \      \"ImageRepository\"\n\t\t\tmetadata: {\n\t\t\t\tname:      context.name\n\t\t\t\tnamespace:
        context.namespace\n\t\t\t}\n\t\t\tspec: {\n\t\t\t\timage:    parameter.imageRepository.image\n\t\t\t\tinterval:
        parameter.imageRepository.interval\n\t\t\t\tif parameter.imageRepository.secretRef
        != _|_ {\n\t\t\t\t\tsecretRef: name: parameter.imageRepository.secretRef\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\timagePolicy:
        {\n\t\t\tapiVersion: \"image.toolkit.fluxcd.io/v1beta1\"\n\t\t\tkind:       \"ImagePolicy\"\n\t\t\tmetadata:
        {\n\t\t\t\tname:      context.name\n\t\t\t\tnamespace: context.namespace\n\t\t\t}\n\t\t\tspec:
        {\n\t\t\t\timageRepositoryRef: name: context.name\n\t\t\t\tpolicy: parameter.imageRepository.policy\n\t\t\t\tif
        parameter.imageRepository.filterTags != _|_ {\n\t\t\t\t\tfilterTags: parameter.imageRepository.filterTags\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\timageUpdate:
        {\n\t\t\tapiVersion: \"image.toolkit.fluxcd.io/v1beta1\"\n\t\t\tkind:       \"ImageUpdateAutomation\"\n\t\t\tmetadata:
        {\n\t\t\t\tname:      context.name\n\t\t\t\tnamespace: context.namespace\n\t\t\t}\n\t\t\tspec:
        {\n\t\t\t\tinterval: parameter.imageRepository.interval\n\t\t\t\tsourceRef:
        {\n\t\t\t\t\tkind: \"GitRepository\"\n\t\t\t\t\tif parameter.sourceName ==
        _|_ {\n\t\t\t\t\t\tname: context.name\n\t\t\t\t\t}\n\t\t\t\t\tif parameter.sourceName
        != _|_ {\n\t\t\t\t\t\tname: parameter.sourceName\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tgit:
        {\n\t\t\t\t\tcheckout: ref: branch: parameter.git.branch\n\t\t\t\t\tcommit:
        {\n\t\t\t\t\t\tauthor: {\n\t\t\t\t\t\t\temail: \"kubevelabot@users.noreply.github.com\"\n\t\t\t\t\t\t\tname:
        \ \"kubevelabot\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif parameter.imageRepository.commitMessage
        != _|_ {\n\t\t\t\t\t\t\tmessageTemplate: \"Update image automatically.\\n\"
        + parameter.imageRepository.commitMessage\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif parameter.imageRepository.commitMessage
        == _|_ {\n\t\t\t\t\t\t\tmessageTemplate: \"Update image automatically.\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpush:
        branch: parameter.git.branch\n\t\t\t\t}\n\t\t\t\tupdate: {\n\t\t\t\t\tpath:
        \    parameter.path\n\t\t\t\t\tstrategy: \"Setters\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n_secret:
        {\n\tif parameter.secretRef != _|_ {\n\t\tsecretRef: name: parameter.secretRef\n\t}\n}\n_sourceCommonArgs:
        {\n\tinterval: parameter.pullInterval\n\tif parameter.timeout != _|_ {\n\t\ttimeout:
        parameter.timeout\n\t}\n}\nparameter: {\n\trepoType: *\"git\" | \"oss\" |
        \"oci\"\n\t// +usage=The image repository for automatically update image to
        git\n\timageRepository?: {\n\t\t// +usage=The image url\n\t\timage: string\n\t\t//
        +usage=The name of the secret containing authentication credentials\n\t\tsecretRef?:
        string\n\t\t// +usage=Policy gives the particulars of the policy to be followed
        in selecting the most recent image.\n\t\tpolicy: {\n\t\t\t// +usage=Alphabetical
        set of rules to use for alphabetical ordering of the tags.\n\t\t\talphabetical?:
        {\n\t\t\t\t// +usage=Order specifies the sorting order of the tags.\n\t\t\t\t//
        +usage=Given the letters of the alphabet as tags, ascending order would select
        Z, and descending order would select A.\n\t\t\t\torder?: \"asc\" | \"desc\"\n\t\t\t}\n\t\t\t//
        +usage=Numerical set of rules to use for numerical ordering of the tags.\n\t\t\tnumerical?:
        {\n\t\t\t\t// +usage=Order specifies the sorting order of the tags.\n\t\t\t\t//
        +usage=Given the integer values from 0 to 9 as tags, ascending order would
        select 9, and descending order would select 0.\n\t\t\t\torder: \"asc\" | \"desc\"\n\t\t\t}\n\t\t\t//
        +usage=SemVer gives a semantic version range to check against the tags available.\n\t\t\tsemver?:
        {\n\t\t\t\t// +usage=Range gives a semver range for the image tag; the highest
        version within the range that's a tag yields the latest image.\n\t\t\t\trange:
        string\n\t\t\t}\n\t\t}\n\t\t// +usage=FilterTags enables filtering for only
        a subset of tags based on a set of rules. If no rules are provided, all the
        tags from the repository will be ordered and compared.\n\t\tfilterTags?: {\n\t\t\t//
        +usage=Extract allows a capture group to be extracted from the specified regular
        expression pattern, useful before tag evaluation.\n\t\t\textract?: string\n\t\t\t//
        +usage=Pattern specifies a regular expression pattern used to filter for image
        tags.\n\t\t\tpattern?: string\n\t\t}\n\t\t// +usage=The image url\n\t\tcommitMessage?:
        string\n\t\t// +uasge=Interval is the length of time to wait between scans
        of the image repository.\n\t\tinterval: *\"5m\" | string\n\t}\n\t// +usage=The
        interval at which to check for repository/bucket and release updates, default
        to 5m\n\tpullInterval: *\"5m\" | string\n\t// +usage=The Git or Helm repository
        URL, OSS endpoint or OCI repo, accept HTTP/S or SSH address as git url\n\turl:
        string\n\t// +usage=The name of the secret containing authentication credentials\n\tsecretRef?:
        string\n\t// +usage=The timeout for operations like download index/clone repository,
        optional\n\ttimeout?: string\n\t// +usage=The name of the source already existed\n\tsourceName?:
        string\n\n\tgit?: {\n\t\t// +usage=The Git reference to checkout and monitor
        for changes, defaults to master branch\n\t\tbranch: string\n\t\t// +usage=Determines
        which git client library to use. Defaults to GitHub, it will pick go-git.
        AzureDevOps will pick libgit2.\n\t\tprovider?: *\"GitHub\" | \"AzureDevOps\"\n\t}\n\toss?:
        {\n\t\t// +usage=The bucket's name, required if repoType is oss\n\t\tbucketName:
        string\n\t\t// +usage=\"generic\" for Minio, Amazon S3, Google Cloud Storage,
        Alibaba Cloud OSS, \"aws\" for retrieve credentials from the EC2 service when
        credentials not specified, default \"generic\"\n\t\tprovider: *\"generic\"
        | \"aws\"\n\t\t// +usage=The bucket region, optional\n\t\tregion?: string\n\t}\n\toci?:
        {\n\t\t// +usage=The OIDC provider used for authentication purposes.The generic
        provider can be used for public repositories or when static credentials are
        used for authentication, either with spec.secretRef or spec.serviceAccountName\n\t\tprovider:
        *\"generic\" | \"azure\" | \"aws\" | \"gcp\"\n\t\t// +usage=The image tag\n\t\ttag:
        *\"latest\" | string\n\t}\n\t//+usage=Path to the directory containing the
        kustomization.yaml file, or the set of plain YAMLs a kustomization.yaml should
        be generated for.\n\tpath: string\n\t//+usage=Whether to delete objects that
        have already been applyed\n\tprune: *true | bool\n\t//+usage=This flag tells
        the controller to suspend subsequent kustomize executions, it does not apply
        to already started executions. Defaults to false.\n\tsuspend: *false | bool\n\t//+usage=Force
        instructs the controller to recreate resources when patching fails due to
        an immutable field change.\n\tforce: *false | bool\n\t//+usage=TargetNamespace
        sets or overrides the namespace in the kustomization.yaml file, optional\n\ttargetNamespace?:
        string\n}\n"
  workload:
    type: autodetects.core.oam.dev
---
apiVersion: core.oam.dev/v1beta1
kind: ComponentDefinition
metadata:
  annotations:
    definition.oam.dev/description: helm release is a group of K8s resources from
      either git repository or helm repo
  labels: {}
  name: helm
  namespace: vela-system
spec:
  schematic:
    cue:
      template: "outputs: {\n\tif parameter.sourceName == _|_ {\n\t\trepo: {\n\t\t\tapiVersion:
        \"source.toolkit.fluxcd.io/v1beta2\"\n\t\t\tmetadata: name: context.name\n\t\t\tif
        parameter.repoType == \"git\" {\n\t\t\t\tkind: \"GitRepository\"\n\t\t\t\tspec:
        {\n\t\t\t\t\turl: parameter.url\n\t\t\t\t\tif parameter.git.branch != _|_
        {\n\t\t\t\t\t\tref: branch: parameter.git.branch\n\t\t\t\t\t}\n\t\t\t\t\t_secret\n\t\t\t\t\t_sourceCommonArgs\n\t\t\t\t}\n\t\t\t}\n\t\t\tif
        parameter.repoType == \"oss\" {\n\t\t\t\tkind: \"Bucket\"\n\t\t\t\tspec: {\n\t\t\t\t\tendpoint:
        \  parameter.url\n\t\t\t\t\tbucketName: parameter.oss.bucketName\n\t\t\t\t\tprovider:
        \  parameter.oss.provider\n\t\t\t\t\tif parameter.oss.region != _|_ {\n\t\t\t\t\t\tregion:
        parameter.oss.region\n\t\t\t\t\t}\n\t\t\t\t\t_secret\n\t\t\t\t\t_sourceCommonArgs\n\t\t\t\t}\n\t\t\t}\n\t\t\tif
        parameter.repoType == \"helm\" || parameter.repoType == \"oci\" {\n\t\t\t\tkind:
        \"HelmRepository\"\n\t\t\t\tspec: {\n\t\t\t\t\turl: parameter.url\n\t\t\t\t\tif
        parameter.repoType == \"oci\" {\n\t\t\t\t\t\ttype: \"oci\"\n\t\t\t\t\t}\n\t\t\t\t\tif
        parameter.helmrepository.provider != _|_ {\n\t\t\t\t\t\tprovider: parameter.helmrepository.provider\n\t\t\t\t\t}\n\t\t\t\t\t_secret\n\t\t\t\t\t_sourceCommonArgs\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\noutput:
        {\n\tapiVersion: \"helm.toolkit.fluxcd.io/v2beta1\"\n\tkind:       \"HelmRelease\"\n\tmetadata:
        name: context.name\n\tspec: {\n\t\ttimeout:  parameter.installTimeout\n\t\tinterval:
        parameter.pullInterval\n\t\tchart: spec: {\n\t\t\tchart:   parameter.chart\n\t\t\tversion:
        parameter.version\n\t\t\tsourceRef: {\n\t\t\t\tif parameter.repoType == \"git\"
        {\n\t\t\t\t\tkind: \"GitRepository\"\n\t\t\t\t}\n\t\t\t\tif parameter.repoType
        == \"helm\" || parameter.repoType == \"oci\" {\n\t\t\t\t\tkind: \"HelmRepository\"\n\t\t\t\t}\n\t\t\t\tif
        parameter.repoType == \"oss\" {\n\t\t\t\t\tkind: \"Bucket\"\n\t\t\t\t}\n\t\t\t\tif
        parameter.sourceName == _|_ {\n\t\t\t\t\tname: context.name\n\t\t\t\t}\n\t\t\t\tif
        parameter.sourceName != _|_ {\n\t\t\t\t\tname: parameter.sourceName\n\t\t\t\t}\n\t\t\t}\n\t\t\tinterval:
        parameter.interval\n\t\t\tif parameter[\"valuesFiles\"] != _|_ {\n\t\t\t\tvaluesFiles:
        parameter[\"valuesFiles\"]\n\t\t\t}\n\t\t}\n\t\tif parameter.targetNamespace
        != _|_ {\n\t\t\ttargetNamespace: parameter.targetNamespace\n\t\t}\n\t\tif
        parameter.releaseName != _|_ {\n\t\t\treleaseName: parameter.releaseName\n\t\t}\n\t\tif
        parameter.values != _|_ {\n\t\t\tvalues: parameter.values\n\t\t}\n\t\tif parameter.valuesFrom
        != _|_ {\n\t\t\tvaluesFrom: [ for v in parameter.valuesFrom {{\n\t\t\t\tkind:
        v.kind\n\t\t\t\tname: v.name\n\t\t\t\tif v.valuesKey != _|_ {\n\t\t\t\t\tvaluesKey:
        v.valuesKey\n\t\t\t\t}\n\t\t\t\tif v.targetPath != _|_ {\n\t\t\t\t\ttargetPath:
        v.targetPath\n\t\t\t\t}\n\t\t\t\tif v.optional != _|_ {\n\t\t\t\t\toptional:
        v.optional\n\t\t\t\t}\n\t\t\t}}]\n\t\t}\n\t\tinstall: remediation: retries:
        parameter.retries\n\t\tupgrade: {\n\t\t\tremediation: retries: parameter.retries\n\t\t\tif
        parameter.upgradeCRD != _|_ {\n\t\t\t\tif parameter.upgradeCRD {\n\t\t\t\t\tcrds:
        \"CreateReplace\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n_secret: {\n\tif parameter.secretRef
        != _|_ {\n\t\tif parameter.secretRef != \"\" {\n\t\t\tsecretRef: name: parameter.secretRef\n\t\t}\n\t}\n}\n_sourceCommonArgs:
        {\n\tinterval: parameter.pullInterval\n\tif parameter.timeout != _|_ {\n\t\ttimeout:
        parameter.timeout\n\t}\n}\nparameter: {\n\trepoType: *\"helm\" | \"git\" |
        \"oss\" | \"oci\"\n\t// +usage=The interval at which to check for repository/bucket
        and release updates, default to 5m\n\tpullInterval: *\"5m\" | string\n\t//
        +usage=The  Interval at which to reconcile the Helm release, default to 30s\n\tinterval:
        *\"30s\" | string\n\t// +usage=The Git or Helm repository URL, OSS endpoint,
        accept HTTP/S or SSH address as git url,\n\turl: string\n\t// +usage=The name
        of the secret containing authentication credentials\n\tsecretRef?: string\n\t//
        +usage=The timeout for operations like download index/clone repository, optional\n\ttimeout?:
        string\n\t// +usage=The timeout for operation `helm install`, optional\n\tinstallTimeout:
        *\"10m\" | string\n\t// +usage=The name of the source already existed\n\tsourceName?:
        string\n\n\tgit?: {\n\t\t// +usage=The Git reference to checkout and monitor
        for changes, defaults to main branch\n\t\tbranch: *\"main\" | string\n\t}\n\toss?:
        {\n\t\t// +usage=The bucket's name, required if repoType is oss\n\t\tbucketName:
        string\n\t\t// +usage=\"generic\" for Minio, Amazon S3, Google Cloud Storage,
        Alibaba Cloud OSS, \"aws\" for retrieve credentials from the EC2 service when
        credentials not specified, default \"generic\"\n\t\tprovider: *\"generic\"
        | \"azure\" | \"aws\" | \"gcp\"\n\t\t// +usage=The bucket region, optional\n\t\tregion?:
        string\n\t}\n\thelmrepository?: {\n\t\t// +usage=The OIDC provider used for
        authentication purposes.The generic provider can be used for public repositories
        or when static credentials are used for authentication, either with spec.secretRef
        or spec.serviceAccountName\n\t\tprovider: *\"generic\" | \"azure\" | \"aws\"
        | \"gcp\"\n\t}\n\t// +usage=Alternative list of values files to use as the
        chart values (values.yaml is not included by default), expected to be a relative
        path in the SourceRef.Values files are merged in the order of this list with
        the last file overriding the first.\n\tvaluesFiles?: [...string]\n\n\t// +usage=1.The
        relative path to helm chart for git/oss source. 2. chart name for helm resource
        3. relative path for chart package(e.g. ./charts/podinfo-1.2.3.tgz)\n\tchart:
        string\n\t// +usage=Chart version\n\tversion: *\"*\" | string\n\t// +usage=The
        namespace for helm chart, optional\n\ttargetNamespace?: string\n\t// +usage=The
        release name\n\treleaseName?: string\n\t// +usage=Retry times when install/upgrade
        fail.\n\tretries: *3 | int\n\t// +usage=Chart values\n\tvalues?: #nestedmap\n\t//
        +usage=valuesFrom holds references to resources containing Helm values for
        this HelmRelease, and information about how they should be merged.\n\tvaluesFrom?:
        [...{\n\t\t// +usage=Kind of the values referent, valid values are ('Secret',
        'ConfigMap').\n\t\tkind: \"Secret\" | \"ConfigMap\"\n\t\t// +usage=Name of
        the values referent. Should reside in the same namespace as the referring
        resource.\n\t\tname: string\n\t\t// +usage=ValuesKey is the data key where
        the values.yaml or a specific value can be found at. Defaults to 'values.yaml'.\n\t\tvaluesKey?:
        string\n\t\t// +usage=TargetPath is the YAML dot notation path the value should
        be merged at. When set, the ValuesKey is expected to be a single flat value.
        Defaults to 'None', which results in the values getting merged at the root.\n\t\ttargetPath?:
        string\n\t\t// +usage=Optional marks this ValuesReference as optional. When
        set, a not found error or the values reference is ignored, but any ValuesKey,
        TargetPath or transient error will still result in a reconciliation failure.\n\t\toptional?:
        bool\n\t}]\n\tupgradeCRD?: *false | bool\n}\n#nestedmap: {\n\t...\n}\n"
  status:
    customStatus: "\trepoMessage:    *\"\" | string\n\treleaseMessage: *\"Wating repository
      ready\" | string\n\tif context.outputs.repo == _|_ {\n\t\trepoMessage: \"Use
      existed repository\"\n\t}\n\tif context.outputs.repo != _|_ && context.outputs.repo.status
      == _|_ {\n\t\trepoMessage:    \"Fetching repository\"\n\t}\n\tif context.outputs.repo
      != _|_ && context.outputs.repo.status != _|_ && context.outputs.repo.status.conditions
      != _|_ {\n\t\trepoStatus: context.outputs.repo.status\n\t\tif len(repoStatus.conditions)
      == 0 || repoStatus.conditions[0][\"type\"] != \"Ready\" {\n\t\t\trepoMessage:
      \"Fetch repository fail\"\n\t\t}\n\t\tif len(repoStatus.conditions) != 0 &&
      repoStatus.conditions[0][\"type\"] == \"Ready\" {\n\t\t\trepoMessage: \"Fetch
      repository successfully\"\n\t\t}\n\t}\n\tif context.output.status == _|_ {\n\t\t\treleaseMessage:
      \"Creating helm release\"\n\t}\n\tif context.output.status != _|_ {\n\t\t\treleaseStatus:
      context.output.status\n\t\t\tif releaseStatus.conditions != _|_ {\n\t\t\t\tif
      len(releaseStatus.conditions) > 0 {\n\t\t\t\t\tif releaseStatus.conditions[0][\"message\"]
      != _|_ {\n\t\t\t\t\t\tif releaseStatus.conditions[0][\"message\"] == \"Release
      reconciliation succeeded\" {\n\t\t\t\t\t\t\treleaseMessage: \"Create helm release
      successfully\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif releaseStatus.conditions[0][\"message\"]
      != \"Release reconciliation succeeded\" {\n\t\t\t\t\t\t\t\treleaseBasicMessage:
      \"Delivery helm release in progress, message: \" + releaseStatus.conditions[0][\"message\"]\n\t\t\t\t\t\t\t\tif
      len(releaseStatus.conditions) == 1 {\n\t\t\t\t\t\t\t\t\treleaseMessage: releaseBasicMessage\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif
      len(releaseStatus.conditions) > 1 {\n\t\t\t\t\t\t\t\t\tif releaseStatus.conditions[1][\"message\"]
      != _|_ {\n\t\t\t\t\t\t\t\t\t\treleaseMessage: releaseBasicMessage + \", \" +
      releaseStatus.conditions[1][\"message\"]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t}\n\tmessage:
      repoMessage + \", \" + releaseMessage"
    healthPolicy: 'isHealth: len(context.output.status.conditions) != 0 && context.output.status.conditions[0]["status"]=="True"'
  workload:
    type: autodetects.core.oam.dev
---
apiVersion: core.oam.dev/v1beta1
kind: TraitDefinition
metadata:
  annotations:
    addon.oam.dev/ignore-without-component: fluxcd-kustomize-controller
    definition.oam.dev/description: A list of JSON6902 patch to selected target
  labels:
    custom.definition.oam.dev/ui-hidden: "true"
  name: kustomize-json-patch
  namespace: vela-system
spec:
  podDisruptive: false
  schematic:
    cue:
      template: "patch: spec: patches: parameter.patchesJson\nparameter: {\n\t// +usage=A
        list of JSON6902 patch.\n\tpatchesJson: [...#jsonPatchItem]\n}\n// +usage=Contains
        a JSON6902 patch\n#jsonPatchItem: {\n\ttarget: #selector\n\tpatch: [...{\n\t\t//
        +usage=operation to perform\n\t\top: string | \"add\" | \"remove\" | \"replace\"
        | \"move\" | \"copy\" | \"test\"\n\t\t// +usage=operate path e.g. /foo/bar\n\t\tpath:
        string\n\t\t// +usage=specify source path when op is copy/move\n\t\tfrom?:
        string\n\t\t// +usage=specify opraation value when op is test/add/replace\n\t\tvalue?:
        string\n\t}]\n}\n\n// +usage=Selector specifies a set of resources\n#selector:
        {\n\tgroup?:              string\n\tversion?:            string\n\tkind?:
        \              string\n\tnamespace?:          string\n\tname?:               string\n\tannotationSelector?:
        string\n\tlabelSelector?:      string\n}\n"
---
apiVersion: v1
data:
  expanded-writer: |
    nacos: null
  schema: |
    properties:
      caFile:
        description: The ca certificate of helm repository. Please encode this data with
          base64.
        title: caFile
        type: string
      password:
        description: The password of basic auth repo.
        title: password
        type: string
      url:
        description: The public url of the helm chart repository.
        title: url
        type: string
      username:
        description: The username of basic auth repo.
        title: username
        type: string
    required:
    - url
    type: object
  template: "metadata: {\n\tname:        \"helm-repository\"\n\talias:       \"Helm
    Repository\"\n\tdescription: \"Config information to authenticate helm chart repository\"\n\tsensitive:
    \  false\n\tscope:       \"project\"\n}\n\ntemplate: {\n\toutput: {\n\t\tapiVersion:
    \"v1\"\n\t\tkind:       \"Secret\"\n\t\tmetadata: {\n\t\t\tname:      context.name\n\t\t\tnamespace:
    context.namespace\n\t\t\tlabels: {\n\t\t\t\t\"config.oam.dev/catalog\":       \"velacore-config\"\n\t\t\t\t\"config.oam.dev/type\":
    \         \"helm-repository\"\n\t\t\t\t\"config.oam.dev/multi-cluster\": \"true\"\n\t\t\t\t\"config.oam.dev/sub-type\":
    \     \"helm\"\n\t\t\t}\n\t\t}\n\t\ttype: \"Opaque\"\n\t\tstringData: {\n\t\t\turl:
    parameter.url\n\t\t\tif parameter.username != _|_ {\n\t\t\t\tusername: parameter.username\n\t\t\t}\n\t\t\tif
    parameter.password != _|_ {\n\t\t\t\tpassword: parameter.password\n\t\t\t}\n\n\t\t}\n\t\tdata:
    {\n\t\t\tif parameter.caFile != _|_ {\n\t\t\t\tcaFile: parameter.caFile\n\t\t\t}\n\t\t}\n\t}\n\tparameter:
    {\n\t\t// +usage=The public url of the helm chart repository.\n\t\turl: string\n\t\t//
    +usage=The username of basic auth repo.\n\t\tusername?: string\n\t\t// +usage=The
    password of basic auth repo.\n\t\tpassword?: string\n\t\t// +usage=The ca certificate
    of helm repository. Please encode this data with base64.\n\t\tcaFile?: string\n\t}\n}\n\n\n\tcontext:
    {\n\t\tname: string\n\t\tnamespace: string\n\t}\n"
kind: ConfigMap
metadata:
  annotations:
    config.oam.dev/alias: Helm Repository
    config.oam.dev/description: ""
    config.oam.dev/sensitive: "false"
  creationTimestamp: null
  labels:
    config.oam.dev/catalog: velacore-config
    config.oam.dev/scope: project
  name: config-template-helm-repository
  namespace: vela-system
---
apiVersion: v1
data:
  ui-schema: '[{"jsonKey":"repoType","label":"Repo Type","sort":1,"validate":{"defaultValue":"helm","options":[{"label":"Git","value":"git"},{"label":"Helm","value":"helm"},{"label":"Oss","value":"oss"},{"label":"Oci","value":"oci"}],"required":true}},{"description":"Please
    input or select the helm or git repo address.","jsonKey":"url","label":"Repo URL","sort":2,"uiType":"HelmRepoSelect","validate":{"pattern":"^(http|git).*$","required":true}},{"conditions":[{"jsonKey":"url","op":"!=","value":""}],"description":"Please
    select the chart or input the chart path.","jsonKey":"chart","label":"Chart","sort":3,"uiType":"HelmChartSelect"},{"conditions":[{"jsonKey":"repoType","op":"!=","value":"git"},{"jsonKey":"chart","op":"!=","value":""},{"jsonKey":"url","op":"!=","value":""}],"jsonKey":"version","label":"Version","sort":4,"uiType":"HelmChartVersionSelect","validate":{"defaultValue":"*","required":false}},{"conditions":[{"jsonKey":"repoType","op":"==","value":"git"}],"description":"git
    repoType detail configuration","jsonKey":"git","label":"Git","sort":5,"validate":{"required":true}},{"description":"oss
    repoType detail configuration","disable":true,"jsonKey":"oss","label":"OSS","sort":6},{"conditions":[{"jsonKey":"version","op":"!=","value":""},{"jsonKey":"chart","op":"!=","value":""},{"jsonKey":"url","op":"!=","value":""}],"description":"Set
    the custom values configuration.","jsonKey":"values","sort":7,"uiType":"HelmValues","validate":{"required":false}},{"disable":true,"jsonKey":"installTimeout"},{"disable":true,"jsonKey":"interval"},{"disable":true,"jsonKey":"pullInterval"},{"disable":true,"jsonKey":"releaseName"},{"disable":true,"jsonKey":"targetNamespace"},{"disable":true,"jsonKey":"timeout"}]'
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: component-uischema-helm
  namespace: vela-system
---
apiVersion: v1
data:
  ui-schema: '[{"jsonKey":"repoType","label":"Repo Type","sort":1,"uiType":"Select","validate":{"defaultValue":"git","options":[{"label":"Git","value":"git"},{"label":"Oss","value":"oss"},{"label":"Oci","value":"oci"}],"required":true}},{"jsonKey":"url","label":"Repo
    URL","sort":2,"validate":{"required":true}},{"jsonKey":"path","label":"Path","sort":3,"validate":{"required":true}},{"jsonKey":"pullInterval","label":"PullInterval","sort":4,"validate":{"defaultValue":"5m","required":true}}]'
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: component-uischema-kustomize
  namespace: vela-system
---
apiVersion: v1
data:
  ui-schema: '[{"description":"The ca certificate of helm repository. Please encode
    this data with base64.","jsonKey":"caFile","sort":11,"uiType":"CertBase64"},{"jsonKey":"url","label":"URL","sort":5},{"jsonKey":"username","sort":8,"style":{"colSpan":12}},{"jsonKey":"password","sort":9,"style":{"colSpan":12},"uiType":"Password"}]'
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: config-uischema-helm-repository
  namespace: vela-system
