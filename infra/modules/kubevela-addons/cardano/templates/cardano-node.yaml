{{- range $instanceName, $instance := .Values.instances }}
{{- range $index, $network := $.Values.networks }}
---
apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: {{ $instanceName }}-{{ $network }}
  namespace: vela-system
spec:
  components:
  - name: {{ $instanceName }}-{{ $network }}
    type: webservice
    properties:
      {{ if eq $network "mainnet" }}
      cpu: "2"
      {{ else }}
      cpu: "1"
      {{ end}} 
      {{ if eq $network "mainnet" }}
      memory: 24Gi
      {{ else }}
      memory: 8Gi
      {{ end }}
      env:
      - name: NETWORK
        value: {{ $network }}
      exposeType: ClusterIP
      image: {{ $instance.image }}
      imagePullPolicy: Always
      {{ if not (eq $network "preview") }}
      ports:
      - expose: true
        port: 8090
        protocol: TCP
      {{- end }}
      volumeMounts:
        emptyDir:
        - name: ipc
          mountPath: /ipc
    traits:
    {{- with $instance.updateStrategy }}
    - type: k8s-update-strategy
      properties:
        strategy:
          type: {{ . }}
    {{- end }}
    {{ if eq $network "preview" }}
    - type: expose
      properties:
        annotations:
          "external-dns.alpha.kubernetes.io/hostname": "{{ $instanceName }}-{{ $network }}.scdev.aws.iohkdev.io"
          "service.beta.kubernetes.io/aws-load-balancer-nlb-target-type": "instance"
          "service.beta.kubernetes.io/aws-load-balancer-scheme": "internet-facing"
          "service.beta.kubernetes.io/aws-load-balancer-type": "external"
        type: LoadBalancer
        ports:
        - port: 8090
    {{- end }}
    - type: sidecar
      properties:
        name: socat
        image: alpine/socat
        args:
        - TCP-LISTEN:8090,bind=0.0.0.0,reuseaddr,fork
        - UNIX-CONNECT:/ipc/node.socket
        volumes:
        - name: ipc
          path: /ipc
    - type: storage
      properties:
        pvc:
        {{ if (eq $instanceName "cardano-node") }}
        - name: node-data-{{ $network }}
        {{ else }}
        - name: {{ $instanceName }}-data-{{ $network }}
        {{- end }}
          mountPath: /data
          storageClassName: ebs-sc
          resources:
            requests:
              storage: 500Gi
  policies:
  - name: local-vela-system
    properties:
      clusters:
      - local
      namespace: vela-system
    type: topology
  workflow:
    mode:
      steps: DAG
    steps:
    - meta:
        alias: Deploy To local-vela-system
      name: local-vela-system
      properties:
        policies:
        - local-vela-system
      type: deploy
{{- end }}
{{- end }}